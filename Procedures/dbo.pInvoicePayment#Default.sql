SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[pInvoicePayment#Default]
	 @zContext             xml               = null                               -- default values provided from client-tier (if any)
	,@SetFKDefaults        bit               = 0                                  -- when 1, mandatory FK's are returned as -1 instead of NULL
as
/*********************************************************************************************************************************
Procedure : dbo.pInvoicePayment#Default
Notice    : Copyright Â© 2019 Softworks Group Inc.
Summary   : provides a blank row with default values for presentation in the UI for "new" dbo.InvoicePayment records
-----------------------------------------------------------------------------------------------------------------------------------
Author    : Generated by DB Studio: pSprocGen | Designer: Tim Edlund
Version   : April 2019
-----------------------------------------------------------------------------------------------------------------------------------
Comments
--------
This procedure is used in maintenance of the dbo.InvoicePayment table. When a new record is to be added from the UI, this procedure
is called to return a blank record with default values. If the client-tier is providing the context for the insert, such as a parent
key value for the new record, it must be passed in the @zContext XML parameter. Multiple values may be passed. The standard format
is: <Parameters MyParameter="1000001"/>.

The @SetFKDefaults parameter can be set to 1 to cause the procedure to return mandatory FK values as -1 rather than NULL. This avoids
the need to create complex types for the procedure on architectures which are not using RIA services.

Note that default values for text, ntext and binary type columns is not supported.  These data types are not permitted as local
variables in the current version of SQL Server and should be replaced by varchar(max) and nvarchar(max) where possible.

Some default values are built-in to the shell of the sproc.  The base table column defaults set in the variable declarations below
were obtained from database default constraints which existed at the time the procedure was generated. The declarations include all
columns of the vInvoicePayment entity view, however, only some values (as noted above) are eligible for default setting.  The other
parameters are included for setting context for the table-specific or client-specific logic of the procedure (if any). Default values
returning a question mark "?", system date, or 0 are provided for non-base table columns which are mandatory.  This is done to avoid
compilation errors from the Entity Framework, however, the values will not be applied since they are not in the base table row.

Two levels of customization of the procedure shell are supported. Table-specific logic can be added through the tagged section and a
call to an extended procedure supports client-specific customization. Logic implemented within the code tags is part of the base
product and applies to all client configurations. Client-specific customizations must be implemented in the ext.pInvoicePayment
procedure. The extended procedure is only called where it exists in database. The parameter "@Mode" is set to "default.pre" to
advise ext.pInvoicePayment of the context of the call. All other parameters are also passed, however, only those parameters eligible
for default setting are passed for "output". All parameters corresponding to entity view columns are returned through a SELECT statement.

In order to simplify working with the XML parameter values, logic in the procedure parses the XML and assigns values to variables where
the variable name matches the column name in the XML (assumes single row).  The variables are then available to the table-specific and
client-specific logic.  The @zContext parameter is also passed, unmodified, to the extended procedure to support situations where values
are passed that are not mapped to column names.


-------------------------------------------------------------------------------------------------------------------------------- */

begin
	set nocount on

	declare
		 @errorNo                                      int = 0								-- 0 no error, <50000 SQL error, else business rule
		,@tranCount                                    int = @@trancount			-- determines whether a wrapping transaction exists
		,@sprocName                                    nvarchar(128) = object_name(@@procid)						-- name of currently executing procedure
		,@xState                                       int										-- error state detected in catch block
		,@ON                   bit = cast(1 as bit)														-- constant for bit comparisons
		,@OFF                  bit = cast(0 as bit)														-- constant for bit comparisons
		,@invoicePaymentSID    int               = -1													-- specific default required by EF - do not override
		,@invoiceSID           int               = null												-- no default provided from DB constraint - OK to override
		,@paymentSID           int               = null												-- no default provided from DB constraint - OK to override
		,@amountApplied        decimal(11,2)     = (0.00)											-- default provided from DB constraint - OK to override
		,@appliedDate          date              = sf.fToday()								-- default provided from DB constraint - OK to override
		,@gLPostingDate        date              = null												-- no default provided from DB constraint - OK to override
		,@cancelledTime        datetimeoffset(7) = null												-- no default provided from DB constraint - OK to override
		,@reasonSID            int               = null												-- no default provided from DB constraint - OK to override
		,@userDefinedColumns   xml               = null												-- no default provided from DB constraint - OK to override
		,@invoicePaymentXID    varchar(150)      = null												-- no default provided from DB constraint - OK to override
		,@legacyKey            nvarchar(50)      = null												-- no default provided from DB constraint - OK to override
		,@isDeleted            bit               = (0)												-- default provided from DB constraint - OK to override
		,@createUser           nvarchar(75)      = suser_sname()							-- default value ignored (value set by UI)
		,@createTime           datetimeoffset(7) = sysdatetimeoffset()				-- default value ignored (set to system time)
		,@updateUser           nvarchar(75)      = suser_sname()							-- default value ignored (value set by UI)
		,@updateTime           datetimeoffset(7) = sysdatetimeoffset()				-- default value ignored (set to system time)
		,@rowGUID              uniqueidentifier  = newid()										-- default value ignored (value set by system)
		,@rowStamp             timestamp         = null												-- default value ignored (value set by system)
		,@invoicePersonSID     int               = 0													-- not a base table column (default ignored)
		,@invoiceDate          date              = convert(date, sysdatetimeoffset())										-- not a base table column (default ignored)
		,@tax1Label            nvarchar(8)																		-- not a base table column (default ignored)
		,@tax1Rate             decimal(4,4)																		-- not a base table column (default ignored)
		,@tax1GLAccountCode    varchar(50)																		-- not a base table column (default ignored)
		,@tax2Label            nvarchar(8)																		-- not a base table column (default ignored)
		,@tax2Rate             decimal(4,4)																		-- not a base table column (default ignored)
		,@tax2GLAccountCode    varchar(50)																		-- not a base table column (default ignored)
		,@tax3Label            nvarchar(8)																		-- not a base table column (default ignored)
		,@tax3Rate             decimal(4,4)																		-- not a base table column (default ignored)
		,@tax3GLAccountCode    varchar(50)																		-- not a base table column (default ignored)
		,@registrationYear     smallint          = 0													-- not a base table column (default ignored)
		,@invoiceCancelledTime datetimeoffset(7)															-- not a base table column (default ignored)
		,@invoiceReasonSID     int																						-- not a base table column (default ignored)
		,@isRefund             bit               = 0													-- not a base table column (default ignored)
		,@complaintSID         int																						-- not a base table column (default ignored)
		,@invoiceRowGUID       uniqueidentifier  = newid()										-- not a base table column (default ignored)
		,@paymentPersonSID     int               = 0													-- not a base table column (default ignored)
		,@paymentTypeSID       int               = 0													-- not a base table column (default ignored)
		,@paymentStatusSID     int               = 0													-- not a base table column (default ignored)
		,@gLAccountCode        varchar(50)       = '?'												-- not a base table column (default ignored)
		,@paymentGLPostingDate date																						-- not a base table column (default ignored)
		,@depositDate          date																						-- not a base table column (default ignored)
		,@amountPaid           decimal(11,2)     = convert(decimal(11,2), 0.0)-- not a base table column (default ignored)
		,@reference            varchar(25)																		-- not a base table column (default ignored)
		,@nameOnCard           nvarchar(150)																	-- not a base table column (default ignored)
		,@paymentCard          varchar(20)																		-- not a base table column (default ignored)
		,@transactionID        varchar(50)																		-- not a base table column (default ignored)
		,@lastResponseCode     varchar(50)																		-- not a base table column (default ignored)
		,@verifiedTime         datetime																				-- not a base table column (default ignored)
		,@paymentCancelledTime datetimeoffset(7)															-- not a base table column (default ignored)
		,@paymentReasonSID     int																						-- not a base table column (default ignored)
		,@paymentRowGUID       uniqueidentifier  = newid()										-- not a base table column (default ignored)
		,@reasonGroupSID       int																						-- not a base table column (default ignored)
		,@reasonName           nvarchar(50)																		-- not a base table column (default ignored)
		,@reasonCode           varchar(25)																		-- not a base table column (default ignored)
		,@reasonSequence       smallint																				-- not a base table column (default ignored)
		,@toolTip              nvarchar(500)																	-- not a base table column (default ignored)
		,@reasonIsActive       bit																						-- not a base table column (default ignored)
		,@reasonRowGUID        uniqueidentifier																-- not a base table column (default ignored)
		,@isDeleteEnabled      bit																						-- not a base table column (default ignored)
		,@isReselected         tinyint           = 1													-- specific default required by EF - do not override
		,@isNullApplied        bit               = 1													-- specific default required by EF - do not override
		,@isCancelled          bit																						-- not a base table column (default ignored)
		,@isEditEnabled        bit																						-- not a base table column (default ignored)
		,@gLCheckSum           int																						-- not a base table column (default ignored)
		,@isPaid               bit               = 0													-- not a base table column (default ignored)

	begin try

		-- use a transaction so that any additional updates implemented through the extended
		-- procedure or through table-specific logic succeed or fail as a logical unit

		if @tranCount = 0																											-- no outer transaction
		begin
			begin transaction
		end
		else																																	-- outer transaction so create save point
		begin
			save transaction @sprocName
		end
		-- set mandatory FK values to -1 where requested
		
		if @SetFKDefaults = @ON
		begin
			set @invoiceSID = -1
			set @paymentSID = -1
		end

		-- assign literal defaults passed through @zContext where
		-- provided otherwise leave database default in place
		
		select
			 @invoiceSID         = isnull(context.node.value('@InvoiceSID'       ,'int'              ),@invoiceSID)
			,@paymentSID         = isnull(context.node.value('@PaymentSID'       ,'int'              ),@paymentSID)
			,@amountApplied      = isnull(context.node.value('@AmountApplied'    ,'decimal(11,2)'    ),@amountApplied)
			,@appliedDate        = isnull(context.node.value('@AppliedDate'      ,'date'             ),@appliedDate)
			,@gLPostingDate      = isnull(context.node.value('@GLPostingDate'    ,'date'             ),@gLPostingDate)
			,@cancelledTime      = isnull(context.node.value('@CancelledTime'    ,'datetimeoffset(7)'),@cancelledTime)
			,@reasonSID          = isnull(context.node.value('@ReasonSID'        ,'int'              ),@reasonSID)
			,@invoicePaymentXID  = isnull(context.node.value('@InvoicePaymentXID','varchar(150)'     ),@invoicePaymentXID)
			,@legacyKey          = isnull(context.node.value('@LegacyKey'        ,'nvarchar(50)'     ),@legacyKey)
		from
			@zContext.nodes('Parameters') as context(node)
		

		--! <Overrides>
		--  insert default value logic here ...
		--! </Overrides>
	
		-- call the extended version of the procedure (if it exists) for "default.pre" mode
		
		if exists
		(
			select
				1
			from
				sf.vRoutine r
			where
				r.SchemaName = 'ext'
			and
				r.RoutineName = 'pInvoicePayment'
		)
		begin
		
			exec @errorNo = ext.pInvoicePayment
				 @Mode                 = 'default.pre'
				,@InvoicePaymentSID = @invoicePaymentSID
				,@InvoiceSID = @invoiceSID output
				,@PaymentSID = @paymentSID output
				,@AmountApplied = @amountApplied output
				,@AppliedDate = @appliedDate output
				,@GLPostingDate = @gLPostingDate output
				,@CancelledTime = @cancelledTime output
				,@ReasonSID = @reasonSID output
				,@UserDefinedColumns = @userDefinedColumns output
				,@InvoicePaymentXID = @invoicePaymentXID output
				,@LegacyKey = @legacyKey output
				,@IsDeleted = @isDeleted
				,@CreateUser = @createUser
				,@CreateTime = @createTime
				,@UpdateUser = @updateUser
				,@UpdateTime = @updateTime
				,@RowGUID = @rowGUID
				,@RowStamp = @rowStamp
				,@InvoicePersonSID = @invoicePersonSID
				,@InvoiceDate = @invoiceDate
				,@Tax1Label = @tax1Label
				,@Tax1Rate = @tax1Rate
				,@Tax1GLAccountCode = @tax1GLAccountCode
				,@Tax2Label = @tax2Label
				,@Tax2Rate = @tax2Rate
				,@Tax2GLAccountCode = @tax2GLAccountCode
				,@Tax3Label = @tax3Label
				,@Tax3Rate = @tax3Rate
				,@Tax3GLAccountCode = @tax3GLAccountCode
				,@RegistrationYear = @registrationYear
				,@InvoiceCancelledTime = @invoiceCancelledTime
				,@InvoiceReasonSID = @invoiceReasonSID
				,@IsRefund = @isRefund
				,@ComplaintSID = @complaintSID
				,@InvoiceRowGUID = @invoiceRowGUID
				,@PaymentPersonSID = @paymentPersonSID
				,@PaymentTypeSID = @paymentTypeSID
				,@PaymentStatusSID = @paymentStatusSID
				,@GLAccountCode = @gLAccountCode
				,@PaymentGLPostingDate = @paymentGLPostingDate
				,@DepositDate = @depositDate
				,@AmountPaid = @amountPaid
				,@Reference = @reference
				,@NameOnCard = @nameOnCard
				,@PaymentCard = @paymentCard
				,@TransactionID = @transactionID
				,@LastResponseCode = @lastResponseCode
				,@VerifiedTime = @verifiedTime
				,@PaymentCancelledTime = @paymentCancelledTime
				,@PaymentReasonSID = @paymentReasonSID
				,@PaymentRowGUID = @paymentRowGUID
				,@ReasonGroupSID = @reasonGroupSID
				,@ReasonName = @reasonName
				,@ReasonCode = @reasonCode
				,@ReasonSequence = @reasonSequence
				,@ToolTip = @toolTip
				,@ReasonIsActive = @reasonIsActive
				,@ReasonRowGUID = @reasonRowGUID
				,@IsDeleteEnabled = @isDeleteEnabled
				,@IsReselected = @isReselected
				,@IsNullApplied = @isNullApplied
				,@zContext = @zContext output
				,@IsCancelled = @isCancelled
				,@IsEditEnabled = @isEditEnabled
				,@GLCheckSum = @gLCheckSum
				,@IsPaid = @isPaid
		
		end

		select
			 @invoicePaymentSID InvoicePaymentSID
			,@invoiceSID InvoiceSID
			,@paymentSID PaymentSID
			,@amountApplied AmountApplied
			,@appliedDate AppliedDate
			,@gLPostingDate GLPostingDate
			,@cancelledTime CancelledTime
			,@reasonSID ReasonSID
			,@userDefinedColumns UserDefinedColumns
			,@invoicePaymentXID InvoicePaymentXID
			,@legacyKey LegacyKey
			,@isDeleted IsDeleted
			,@createUser CreateUser
			,@createTime CreateTime
			,@updateUser UpdateUser
			,@updateTime UpdateTime
			,@rowGUID RowGUID
			,@rowStamp RowStamp
			,@invoicePersonSID InvoicePersonSID
			,@invoiceDate InvoiceDate
			,@tax1Label Tax1Label
			,@tax1Rate Tax1Rate
			,@tax1GLAccountCode Tax1GLAccountCode
			,@tax2Label Tax2Label
			,@tax2Rate Tax2Rate
			,@tax2GLAccountCode Tax2GLAccountCode
			,@tax3Label Tax3Label
			,@tax3Rate Tax3Rate
			,@tax3GLAccountCode Tax3GLAccountCode
			,@registrationYear RegistrationYear
			,@invoiceCancelledTime InvoiceCancelledTime
			,@invoiceReasonSID InvoiceReasonSID
			,@isRefund IsRefund
			,@complaintSID ComplaintSID
			,@invoiceRowGUID InvoiceRowGUID
			,@paymentPersonSID PaymentPersonSID
			,@paymentTypeSID PaymentTypeSID
			,@paymentStatusSID PaymentStatusSID
			,@gLAccountCode GLAccountCode
			,@paymentGLPostingDate PaymentGLPostingDate
			,@depositDate DepositDate
			,@amountPaid AmountPaid
			,@reference Reference
			,@nameOnCard NameOnCard
			,@paymentCard PaymentCard
			,@transactionID TransactionID
			,@lastResponseCode LastResponseCode
			,@verifiedTime VerifiedTime
			,@paymentCancelledTime PaymentCancelledTime
			,@paymentReasonSID PaymentReasonSID
			,@paymentRowGUID PaymentRowGUID
			,@reasonGroupSID ReasonGroupSID
			,@reasonName ReasonName
			,@reasonCode ReasonCode
			,@reasonSequence ReasonSequence
			,@toolTip ToolTip
			,@reasonIsActive ReasonIsActive
			,@reasonRowGUID ReasonRowGUID
			,@isDeleteEnabled IsDeleteEnabled
			,@isReselected IsReselected
			,@isNullApplied IsNullApplied
			,@zContext zContext
			,@isCancelled IsCancelled
			,@isEditEnabled IsEditEnabled
			,@gLCheckSum GLCheckSum
			,@isPaid IsPaid

	end try

	begin catch
		set @xState = xact_state()
		
		if @tranCount > 0 and @xState = 1
		begin
			rollback transaction @sprocName																			-- committable wrapping trx exists: rollback to savepoint
		end
		else if @xState <> 0																									-- full rollback
		begin
			rollback
		end
		
		exec @errorNo = sf.pErrorRethrow																			-- process message text and re-throw the error
	end catch

	return(@errorNo)

end
GO
