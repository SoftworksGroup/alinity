SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[pPAPTransaction#Default]
	 @zContext                        xml               = null                               -- default values provided from client-tier (if any)
	,@SetFKDefaults                   bit               = 0                                  -- when 1, mandatory FK's are returned as -1 instead of NULL
as
/*********************************************************************************************************************************
Procedure : dbo.pPAPTransaction#Default
Notice    : Copyright Â© 2019 Softworks Group Inc.
Summary   : provides a blank row with default values for presentation in the UI for "new" dbo.PAPTransaction records
-----------------------------------------------------------------------------------------------------------------------------------
Author    : Generated by DB Studio: pSprocGen | Designer: Tim Edlund
Version   : March 2019
-----------------------------------------------------------------------------------------------------------------------------------
Comments
--------
This procedure is used in maintenance of the dbo.PAPTransaction table. When a new record is to be added from the UI, this procedure
is called to return a blank record with default values. If the client-tier is providing the context for the insert, such as a parent
key value for the new record, it must be passed in the @zContext XML parameter. Multiple values may be passed. The standard format
is: <Parameters MyParameter="1000001"/>.

The @SetFKDefaults parameter can be set to 1 to cause the procedure to return mandatory FK values as -1 rather than NULL. This avoids
the need to create complex types for the procedure on architectures which are not using RIA services.

Note that default values for text, ntext and binary type columns is not supported.  These data types are not permitted as local
variables in the current version of SQL Server and should be replaced by varchar(max) and nvarchar(max) where possible.

Some default values are built-in to the shell of the sproc.  The base table column defaults set in the variable declarations below
were obtained from database default constraints which existed at the time the procedure was generated. The declarations include all
columns of the vPAPTransaction entity view, however, only some values (as noted above) are eligible for default setting.  The other
parameters are included for setting context for the table-specific or client-specific logic of the procedure (if any). Default values
returning a question mark "?", system date, or 0 are provided for non-base table columns which are mandatory.  This is done to avoid
compilation errors from the Entity Framework, however, the values will not be applied since they are not in the base table row.

Two levels of customization of the procedure shell are supported. Table-specific logic can be added through the tagged section and a
call to an extended procedure supports client-specific customization. Logic implemented within the code tags is part of the base
product and applies to all client configurations. Client-specific customizations must be implemented in the ext.pPAPTransaction
procedure. The extended procedure is only called where it exists in database. The parameter "@Mode" is set to "default.pre" to
advise ext.pPAPTransaction of the context of the call. All other parameters are also passed, however, only those parameters eligible
for default setting are passed for "output". All parameters corresponding to entity view columns are returned through a SELECT statement.

In order to simplify working with the XML parameter values, logic in the procedure parses the XML and assigns values to variables where
the variable name matches the column name in the XML (assumes single row).  The variables are then available to the table-specific and
client-specific logic.  The @zContext parameter is also passed, unmodified, to the extended procedure to support situations where values
are passed that are not mapped to column names.


-------------------------------------------------------------------------------------------------------------------------------- */

begin
	set nocount on

	declare
		 @errorNo                                      int = 0								-- 0 no error, <50000 SQL error, else business rule
		,@tranCount                                    int = @@trancount			-- determines whether a wrapping transaction exists
		,@sprocName                                    nvarchar(128) = object_name(@@procid)						-- name of currently executing procedure
		,@xState                                       int										-- error state detected in catch block
		,@ON                              bit = cast(1 as bit)								-- constant for bit comparisons
		,@OFF                             bit = cast(0 as bit)								-- constant for bit comparisons
		,@pAPTransactionSID               int               = -1							-- specific default required by EF - do not override
		,@pAPBatchSID                     int               = null						-- no default provided from DB constraint - OK to override
		,@pAPSubscriptionSID              int               = null						-- no default provided from DB constraint - OK to override
		,@accountNo                       varchar(15)       = null						-- no default provided from DB constraint - OK to override
		,@institutionNo                   varchar(3)        = null						-- no default provided from DB constraint - OK to override
		,@transitNo                       varchar(5)        = null						-- no default provided from DB constraint - OK to override
		,@withdrawalAmount                decimal(11,2)     = null						-- no default provided from DB constraint - OK to override
		,@isRejected                      bit               = (0)							-- default provided from DB constraint - OK to override
		,@paymentSID                      int               = null						-- no default provided from DB constraint - OK to override
		,@userDefinedColumns              xml               = null						-- no default provided from DB constraint - OK to override
		,@pAPTransactionXID               varchar(150)      = null						-- no default provided from DB constraint - OK to override
		,@legacyKey                       nvarchar(50)      = null						-- no default provided from DB constraint - OK to override
		,@isDeleted                       bit               = (0)							-- default provided from DB constraint - OK to override
		,@createUser                      nvarchar(75)      = suser_sname()		-- default value ignored (value set by UI)
		,@createTime                      datetimeoffset(7) = sysdatetimeoffset()												-- default value ignored (set to system time)
		,@updateUser                      nvarchar(75)      = suser_sname()		-- default value ignored (value set by UI)
		,@updateTime                      datetimeoffset(7) = sysdatetimeoffset()												-- default value ignored (set to system time)
		,@rowGUID                         uniqueidentifier  = newid()					-- default value ignored (value set by system)
		,@rowStamp                        timestamp         = null						-- default value ignored (value set by system)
		,@batchID                         varchar(12)       = '?'							-- not a base table column (default ignored)
		,@batchSequence                   int																	-- not a base table column (default ignored)
		,@withdrawalDate                  date              = convert(date, sysdatetimeoffset())				-- not a base table column (default ignored)
		,@lockedTime                      datetimeoffset(7)										-- not a base table column (default ignored)
		,@processedTime                   datetimeoffset(7)										-- not a base table column (default ignored)
		,@pAPBatchRowGUID                 uniqueidentifier  = newid()					-- not a base table column (default ignored)
		,@pAPSubscriptionPersonSID        int               = 0								-- not a base table column (default ignored)
		,@pAPSubscriptionInstitutionNo    varchar(3)        = '?'							-- not a base table column (default ignored)
		,@pAPSubscriptionTransitNo        varchar(5)        = '?'							-- not a base table column (default ignored)
		,@pAPSubscriptionAccountNo        varchar(15)       = '?'							-- not a base table column (default ignored)
		,@pAPSubscriptionWithdrawalAmount decimal(11,2)     = convert(decimal(11,2), 0.0)								-- not a base table column (default ignored)
		,@effectiveTime                   datetime          = sf.fNow()				-- not a base table column (default ignored)
		,@pAPSubscriptionCancelledTime    datetime														-- not a base table column (default ignored)
		,@pAPSubscriptionRowGUID          uniqueidentifier  = newid()					-- not a base table column (default ignored)
		,@paymentPersonSID                int																	-- not a base table column (default ignored)
		,@paymentTypeSID                  int																	-- not a base table column (default ignored)
		,@paymentStatusSID                int																	-- not a base table column (default ignored)
		,@gLAccountCode                   varchar(50)													-- not a base table column (default ignored)
		,@gLPostingDate                   date																-- not a base table column (default ignored)
		,@depositDate                     date																-- not a base table column (default ignored)
		,@amountPaid                      decimal(11,2)												-- not a base table column (default ignored)
		,@reference                       varchar(25)													-- not a base table column (default ignored)
		,@nameOnCard                      nvarchar(150)												-- not a base table column (default ignored)
		,@paymentCard                     varchar(20)													-- not a base table column (default ignored)
		,@transactionID                   varchar(50)													-- not a base table column (default ignored)
		,@lastResponseCode                varchar(50)													-- not a base table column (default ignored)
		,@verifiedTime                    datetime														-- not a base table column (default ignored)
		,@paymentCancelledTime            datetimeoffset(7)										-- not a base table column (default ignored)
		,@reasonSID                       int																	-- not a base table column (default ignored)
		,@paymentRowGUID                  uniqueidentifier										-- not a base table column (default ignored)
		,@isDeleteEnabled                 bit																	-- not a base table column (default ignored)
		,@isReselected                    tinyint           = 1								-- specific default required by EF - do not override
		,@isNullApplied                   bit               = 1								-- specific default required by EF - do not override
		,@registrantNo                    varchar(50)       = '?'							-- not a base table column (default ignored)
		,@displayName                     nvarchar(65)												-- not a base table column (default ignored)
		,@totalApplied                    decimal(11,2)												-- not a base table column (default ignored)

	begin try

		-- use a transaction so that any additional updates implemented through the extended
		-- procedure or through table-specific logic succeed or fail as a logical unit

		if @tranCount = 0																											-- no outer transaction
		begin
			begin transaction
		end
		else																																	-- outer transaction so create save point
		begin
			save transaction @sprocName
		end
		-- set mandatory FK values to -1 where requested
		
		if @SetFKDefaults = @ON
		begin
			set @pAPBatchSID = -1
			set @pAPSubscriptionSID = -1
		end

		-- assign literal defaults passed through @zContext where
		-- provided otherwise leave database default in place
		
		select
			 @pAPBatchSID         = isnull(context.node.value('@PAPBatchSID'       ,'int'          ),@pAPBatchSID)
			,@pAPSubscriptionSID  = isnull(context.node.value('@PAPSubscriptionSID','int'          ),@pAPSubscriptionSID)
			,@accountNo           = isnull(context.node.value('@AccountNo'         ,'varchar(15)'  ),@accountNo)
			,@institutionNo       = isnull(context.node.value('@InstitutionNo'     ,'varchar(3)'   ),@institutionNo)
			,@transitNo           = isnull(context.node.value('@TransitNo'         ,'varchar(5)'   ),@transitNo)
			,@withdrawalAmount    = isnull(context.node.value('@WithdrawalAmount'  ,'decimal(11,2)'),@withdrawalAmount)
			,@isRejected          = isnull(context.node.value('@IsRejected'        ,'bit'          ),@isRejected)
			,@paymentSID          = isnull(context.node.value('@PaymentSID'        ,'int'          ),@paymentSID)
			,@pAPTransactionXID   = isnull(context.node.value('@PAPTransactionXID' ,'varchar(150)' ),@pAPTransactionXID)
			,@legacyKey           = isnull(context.node.value('@LegacyKey'         ,'nvarchar(50)' ),@legacyKey)
		from
			@zContext.nodes('Parameters') as context(node)
		

		--! <Overrides>
		--  insert default value logic here ...
		--! </Overrides>
	
		-- call the extended version of the procedure (if it exists) for "default.pre" mode
		
		if exists
		(
			select
				1
			from
				sf.vRoutine r
			where
				r.SchemaName = 'ext'
			and
				r.RoutineName = 'pPAPTransaction'
		)
		begin
		
			exec @errorNo = ext.pPAPTransaction
				 @Mode                            = 'default.pre'
				,@PAPTransactionSID = @pAPTransactionSID
				,@PAPBatchSID = @pAPBatchSID output
				,@PAPSubscriptionSID = @pAPSubscriptionSID output
				,@AccountNo = @accountNo output
				,@InstitutionNo = @institutionNo output
				,@TransitNo = @transitNo output
				,@WithdrawalAmount = @withdrawalAmount output
				,@IsRejected = @isRejected output
				,@PaymentSID = @paymentSID output
				,@UserDefinedColumns = @userDefinedColumns output
				,@PAPTransactionXID = @pAPTransactionXID output
				,@LegacyKey = @legacyKey output
				,@IsDeleted = @isDeleted
				,@CreateUser = @createUser
				,@CreateTime = @createTime
				,@UpdateUser = @updateUser
				,@UpdateTime = @updateTime
				,@RowGUID = @rowGUID
				,@RowStamp = @rowStamp
				,@BatchID = @batchID
				,@BatchSequence = @batchSequence
				,@WithdrawalDate = @withdrawalDate
				,@LockedTime = @lockedTime
				,@ProcessedTime = @processedTime
				,@PAPBatchRowGUID = @pAPBatchRowGUID
				,@PAPSubscriptionPersonSID = @pAPSubscriptionPersonSID
				,@PAPSubscriptionInstitutionNo = @pAPSubscriptionInstitutionNo
				,@PAPSubscriptionTransitNo = @pAPSubscriptionTransitNo
				,@PAPSubscriptionAccountNo = @pAPSubscriptionAccountNo
				,@PAPSubscriptionWithdrawalAmount = @pAPSubscriptionWithdrawalAmount
				,@EffectiveTime = @effectiveTime
				,@PAPSubscriptionCancelledTime = @pAPSubscriptionCancelledTime
				,@PAPSubscriptionRowGUID = @pAPSubscriptionRowGUID
				,@PaymentPersonSID = @paymentPersonSID
				,@PaymentTypeSID = @paymentTypeSID
				,@PaymentStatusSID = @paymentStatusSID
				,@GLAccountCode = @gLAccountCode
				,@GLPostingDate = @gLPostingDate
				,@DepositDate = @depositDate
				,@AmountPaid = @amountPaid
				,@Reference = @reference
				,@NameOnCard = @nameOnCard
				,@PaymentCard = @paymentCard
				,@TransactionID = @transactionID
				,@LastResponseCode = @lastResponseCode
				,@VerifiedTime = @verifiedTime
				,@PaymentCancelledTime = @paymentCancelledTime
				,@ReasonSID = @reasonSID
				,@PaymentRowGUID = @paymentRowGUID
				,@IsDeleteEnabled = @isDeleteEnabled
				,@IsReselected = @isReselected
				,@IsNullApplied = @isNullApplied
				,@zContext = @zContext output
				,@RegistrantNo = @registrantNo
				,@DisplayName = @displayName
				,@TotalApplied = @totalApplied
		
		end

		select
			 @pAPTransactionSID PAPTransactionSID
			,@pAPBatchSID PAPBatchSID
			,@pAPSubscriptionSID PAPSubscriptionSID
			,@accountNo AccountNo
			,@institutionNo InstitutionNo
			,@transitNo TransitNo
			,@withdrawalAmount WithdrawalAmount
			,@isRejected IsRejected
			,@paymentSID PaymentSID
			,@userDefinedColumns UserDefinedColumns
			,@pAPTransactionXID PAPTransactionXID
			,@legacyKey LegacyKey
			,@isDeleted IsDeleted
			,@createUser CreateUser
			,@createTime CreateTime
			,@updateUser UpdateUser
			,@updateTime UpdateTime
			,@rowGUID RowGUID
			,@rowStamp RowStamp
			,@batchID BatchID
			,@batchSequence BatchSequence
			,@withdrawalDate WithdrawalDate
			,@lockedTime LockedTime
			,@processedTime ProcessedTime
			,@pAPBatchRowGUID PAPBatchRowGUID
			,@pAPSubscriptionPersonSID PAPSubscriptionPersonSID
			,@pAPSubscriptionInstitutionNo PAPSubscriptionInstitutionNo
			,@pAPSubscriptionTransitNo PAPSubscriptionTransitNo
			,@pAPSubscriptionAccountNo PAPSubscriptionAccountNo
			,@pAPSubscriptionWithdrawalAmount PAPSubscriptionWithdrawalAmount
			,@effectiveTime EffectiveTime
			,@pAPSubscriptionCancelledTime PAPSubscriptionCancelledTime
			,@pAPSubscriptionRowGUID PAPSubscriptionRowGUID
			,@paymentPersonSID PaymentPersonSID
			,@paymentTypeSID PaymentTypeSID
			,@paymentStatusSID PaymentStatusSID
			,@gLAccountCode GLAccountCode
			,@gLPostingDate GLPostingDate
			,@depositDate DepositDate
			,@amountPaid AmountPaid
			,@reference Reference
			,@nameOnCard NameOnCard
			,@paymentCard PaymentCard
			,@transactionID TransactionID
			,@lastResponseCode LastResponseCode
			,@verifiedTime VerifiedTime
			,@paymentCancelledTime PaymentCancelledTime
			,@reasonSID ReasonSID
			,@paymentRowGUID PaymentRowGUID
			,@isDeleteEnabled IsDeleteEnabled
			,@isReselected IsReselected
			,@isNullApplied IsNullApplied
			,@zContext zContext
			,@registrantNo RegistrantNo
			,@displayName DisplayName
			,@totalApplied TotalApplied

	end try

	begin catch
		set @xState = xact_state()
		
		if @tranCount > 0 and @xState = 1
		begin
			rollback transaction @sprocName																			-- committable wrapping trx exists: rollback to savepoint
		end
		else if @xState <> 0																									-- full rollback
		begin
			rollback
		end
		
		exec @errorNo = sf.pErrorRethrow																			-- process message text and re-throw the error
	end catch

	return(@errorNo)

end
GO
