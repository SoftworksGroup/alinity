SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [sf].[pJob#Default]
	 @zContext                   xml               = null                -- default values provided from client-tier (if any)
	,@SetFKDefaults              bit               = 0                   -- when 1, mandatory FK's are returned as -1 instead of NULL
as
/*********************************************************************************************************************************
Procedure : sf.pJob#Default
Notice    : Copyright Â© 2019 Softworks Group Inc.
Summary   : provides a blank row with default values for presentation in the UI for "new" sf.Job records
-----------------------------------------------------------------------------------------------------------------------------------
Author    : Generated by DB Studio: pSprocGen | Designer: Tim Edlund
Version   : March 2019
-----------------------------------------------------------------------------------------------------------------------------------
Comments
--------
This procedure is used in maintenance of the sf.Job table. When a new record is to be added from the UI, this procedure
is called to return a blank record with default values. If the client-tier is providing the context for the insert, such as a parent
key value for the new record, it must be passed in the @zContext XML parameter. Multiple values may be passed. The standard format
is: <Parameters MyParameter="1000001"/>.

The @SetFKDefaults parameter can be set to 1 to cause the procedure to return mandatory FK values as -1 rather than NULL. This avoids
the need to create complex types for the procedure on architectures which are not using RIA services.

Note that default values for text, ntext and binary type columns is not supported.  These data types are not permitted as local
variables in the current version of SQL Server and should be replaced by varchar(max) and nvarchar(max) where possible.

Some default values are built-in to the shell of the sproc.  The base table column defaults set in the variable declarations below
were obtained from database default constraints which existed at the time the procedure was generated. The declarations include all
columns of the vJob entity view, however, only some values (as noted above) are eligible for default setting.  The other
parameters are included for setting context for the table-specific or client-specific logic of the procedure (if any). Default values
returning a question mark "?", system date, or 0 are provided for non-base table columns which are mandatory.  This is done to avoid
compilation errors from the Entity Framework, however, the values will not be applied since they are not in the base table row.

Two levels of customization of the procedure shell are supported. Table-specific logic can be added through the tagged section and a
call to an extended procedure supports client-specific customization. Logic implemented within the code tags is part of the base
product and applies to all client configurations. Client-specific customizations must be implemented in the ext.pJob
procedure. The extended procedure is only called where it exists in database. The parameter "@Mode" is set to "default.pre" to
advise ext.pJob of the context of the call. All other parameters are also passed, however, only those parameters eligible
for default setting are passed for "output". All parameters corresponding to entity view columns are returned through a SELECT statement.

In order to simplify working with the XML parameter values, logic in the procedure parses the XML and assigns values to variables where
the variable name matches the column name in the XML (assumes single row).  The variables are then available to the table-specific and
client-specific logic.  The @zContext parameter is also passed, unmodified, to the extended procedure to support situations where values
are passed that are not mapped to column names.


-------------------------------------------------------------------------------------------------------------------------------- */

begin
	set nocount on

	declare
		 @errorNo                                      int = 0								-- 0 no error, <50000 SQL error, else business rule
		,@tranCount                                    int = @@trancount			-- determines whether a wrapping transaction exists
		,@sprocName                                    nvarchar(128) = object_name(@@procid)						-- name of currently executing procedure
		,@xState                                       int										-- error state detected in catch block
		,@ON                         bit = cast(1 as bit)											-- constant for bit comparisons
		,@OFF                        bit = cast(0 as bit)											-- constant for bit comparisons
		,@jobSID                     int               = -1										-- specific default required by EF - do not override
		,@jobSCD                     varchar(132)      = null									-- no default provided from DB constraint - OK to override
		,@jobLabel                   nvarchar(35)      = null									-- no default provided from DB constraint - OK to override
		,@jobDescription             nvarchar(max)     = null									-- no default provided from DB constraint - OK to override
		,@callSyntaxTemplate         nvarchar(max)     = null									-- no default provided from DB constraint - OK to override
		,@isCancelEnabled            bit               = (1)									-- default provided from DB constraint - OK to override
		,@isParallelEnabled          bit               = (0)									-- default provided from DB constraint - OK to override
		,@isFullTraceEnabled         bit               = (0)									-- default provided from DB constraint - OK to override
		,@isAlertOnSuccessEnabled    bit               = (0)									-- default provided from DB constraint - OK to override
		,@jobScheduleSID             int               = null									-- no default provided from DB constraint - OK to override
		,@jobScheduleSequence        int               = (50)									-- default provided from DB constraint - OK to override
		,@isRunAfterPredecessorsOnly bit               = (0)									-- default provided from DB constraint - OK to override
		,@maxErrorRate               int               = (0)									-- default provided from DB constraint - OK to override
		,@maxRetriesOnFailure        tinyint           = (0)									-- default provided from DB constraint - OK to override
		,@traceLog                   nvarchar(max)     = null									-- no default provided from DB constraint - OK to override
		,@isActive                   bit               = (1)									-- default provided from DB constraint - OK to override
		,@userDefinedColumns         xml               = null									-- no default provided from DB constraint - OK to override
		,@jobXID                     varchar(150)      = null									-- no default provided from DB constraint - OK to override
		,@legacyKey                  nvarchar(50)      = null									-- no default provided from DB constraint - OK to override
		,@isDeleted                  bit               = (0)									-- default provided from DB constraint - OK to override
		,@createUser                 nvarchar(75)      = suser_sname()				-- default value ignored (value set by UI)
		,@createTime                 datetimeoffset(7) = sysdatetimeoffset()	-- default value ignored (set to system time)
		,@updateUser                 nvarchar(75)      = suser_sname()				-- default value ignored (value set by UI)
		,@updateTime                 datetimeoffset(7) = sysdatetimeoffset()	-- default value ignored (set to system time)
		,@rowGUID                    uniqueidentifier  = newid()							-- default value ignored (value set by system)
		,@rowStamp                   timestamp         = null									-- default value ignored (value set by system)
		,@jobScheduleLabel           nvarchar(35)															-- not a base table column (default ignored)
		,@isEnabled                  bit																			-- not a base table column (default ignored)
		,@isRunMonday                bit																			-- not a base table column (default ignored)
		,@isRunTuesday               bit																			-- not a base table column (default ignored)
		,@isRunWednesday             bit																			-- not a base table column (default ignored)
		,@isRunThursday              bit																			-- not a base table column (default ignored)
		,@isRunFriday                bit																			-- not a base table column (default ignored)
		,@isRunSaturday              bit																			-- not a base table column (default ignored)
		,@isRunSunday                bit																			-- not a base table column (default ignored)
		,@repeatIntervalMinutes      smallint																	-- not a base table column (default ignored)
		,@startTime                  time(0)																	-- not a base table column (default ignored)
		,@endTime                    time(0)																	-- not a base table column (default ignored)
		,@startDate                  date																			-- not a base table column (default ignored)
		,@endDate                    date																			-- not a base table column (default ignored)
		,@jobScheduleRowGUID         uniqueidentifier													-- not a base table column (default ignored)
		,@isDeleteEnabled            bit																			-- not a base table column (default ignored)
		,@isReselected               tinyint           = 1										-- specific default required by EF - do not override
		,@isNullApplied              bit               = 1										-- specific default required by EF - do not override
		,@lastJobStatusSCD           varchar(35)															-- not a base table column (default ignored)
		,@lastJobStatusLabel         nvarchar(35)															-- not a base table column (default ignored)
		,@lastStartTime              datetime																	-- not a base table column (default ignored)
		,@lastEndTime                datetime																	-- not a base table column (default ignored)
		,@nextScheduledTime          datetime																	-- not a base table column (default ignored)
		,@nextScheduledTimeServerTZ  datetimeoffset(7)												-- not a base table column (default ignored)
		,@minDuration                int																			-- not a base table column (default ignored)
		,@maxDuration                int																			-- not a base table column (default ignored)
		,@avgDuration                int																			-- not a base table column (default ignored)
		,@isTaskTriggerJob           bit																			-- not a base table column (default ignored)
		,@lastRunRecords             int																			-- not a base table column (default ignored)
		,@lastRunProcessed           int																			-- not a base table column (default ignored)
		,@lastRunErrors              int																			-- not a base table column (default ignored)

	begin try

		-- use a transaction so that any additional updates implemented through the extended
		-- procedure or through table-specific logic succeed or fail as a logical unit

		if @tranCount = 0																											-- no outer transaction
		begin
			begin transaction
		end
		else																																	-- outer transaction so create save point
		begin
			save transaction @sprocName
		end
		-- assign literal defaults passed through @zContext where
		-- provided otherwise leave database default in place
		
		select
			 @jobSCD                      = isnull(context.node.value('@JobSCD'                    ,'varchar(132)' ),@jobSCD)
			,@jobLabel                    = isnull(context.node.value('@JobLabel'                  ,'nvarchar(35)' ),@jobLabel)
			,@jobDescription              = isnull(context.node.value('@JobDescription'            ,'nvarchar(max)'),@jobDescription)
			,@callSyntaxTemplate          = isnull(context.node.value('@CallSyntaxTemplate'        ,'nvarchar(max)'),@callSyntaxTemplate)
			,@isCancelEnabled             = isnull(context.node.value('@IsCancelEnabled'           ,'bit'          ),@isCancelEnabled)
			,@isParallelEnabled           = isnull(context.node.value('@IsParallelEnabled'         ,'bit'          ),@isParallelEnabled)
			,@isFullTraceEnabled          = isnull(context.node.value('@IsFullTraceEnabled'        ,'bit'          ),@isFullTraceEnabled)
			,@isAlertOnSuccessEnabled     = isnull(context.node.value('@IsAlertOnSuccessEnabled'   ,'bit'          ),@isAlertOnSuccessEnabled)
			,@jobScheduleSID              = isnull(context.node.value('@JobScheduleSID'            ,'int'          ),@jobScheduleSID)
			,@jobScheduleSequence         = isnull(context.node.value('@JobScheduleSequence'       ,'int'          ),@jobScheduleSequence)
			,@isRunAfterPredecessorsOnly  = isnull(context.node.value('@IsRunAfterPredecessorsOnly','bit'          ),@isRunAfterPredecessorsOnly)
			,@maxErrorRate                = isnull(context.node.value('@MaxErrorRate'              ,'int'          ),@maxErrorRate)
			,@maxRetriesOnFailure         = isnull(context.node.value('@MaxRetriesOnFailure'       ,'tinyint'      ),@maxRetriesOnFailure)
			,@traceLog                    = isnull(context.node.value('@TraceLog'                  ,'nvarchar(max)'),@traceLog)
			,@isActive                    = isnull(context.node.value('@IsActive'                  ,'bit'          ),@isActive)
			,@jobXID                      = isnull(context.node.value('@JobXID'                    ,'varchar(150)' ),@jobXID)
			,@legacyKey                   = isnull(context.node.value('@LegacyKey'                 ,'nvarchar(50)' ),@legacyKey)
		from
			@zContext.nodes('Parameters') as context(node)
		

		--! <Overrides>
		--  insert default value logic here ...
		--! </Overrides>

		select
			 @jobSID JobSID
			,@jobSCD JobSCD
			,@jobLabel JobLabel
			,@jobDescription JobDescription
			,@callSyntaxTemplate CallSyntaxTemplate
			,@isCancelEnabled IsCancelEnabled
			,@isParallelEnabled IsParallelEnabled
			,@isFullTraceEnabled IsFullTraceEnabled
			,@isAlertOnSuccessEnabled IsAlertOnSuccessEnabled
			,@jobScheduleSID JobScheduleSID
			,@jobScheduleSequence JobScheduleSequence
			,@isRunAfterPredecessorsOnly IsRunAfterPredecessorsOnly
			,@maxErrorRate MaxErrorRate
			,@maxRetriesOnFailure MaxRetriesOnFailure
			,@traceLog TraceLog
			,@isActive IsActive
			,@userDefinedColumns UserDefinedColumns
			,@jobXID JobXID
			,@legacyKey LegacyKey
			,@isDeleted IsDeleted
			,@createUser CreateUser
			,@createTime CreateTime
			,@updateUser UpdateUser
			,@updateTime UpdateTime
			,@rowGUID RowGUID
			,@rowStamp RowStamp
			,@jobScheduleLabel JobScheduleLabel
			,@isEnabled IsEnabled
			,@isRunMonday IsRunMonday
			,@isRunTuesday IsRunTuesday
			,@isRunWednesday IsRunWednesday
			,@isRunThursday IsRunThursday
			,@isRunFriday IsRunFriday
			,@isRunSaturday IsRunSaturday
			,@isRunSunday IsRunSunday
			,@repeatIntervalMinutes RepeatIntervalMinutes
			,@startTime StartTime
			,@endTime EndTime
			,@startDate StartDate
			,@endDate EndDate
			,@jobScheduleRowGUID JobScheduleRowGUID
			,@isDeleteEnabled IsDeleteEnabled
			,@isReselected IsReselected
			,@isNullApplied IsNullApplied
			,@zContext zContext
			,@lastJobStatusSCD LastJobStatusSCD
			,@lastJobStatusLabel LastJobStatusLabel
			,@lastStartTime LastStartTime
			,@lastEndTime LastEndTime
			,@nextScheduledTime NextScheduledTime
			,@nextScheduledTimeServerTZ NextScheduledTimeServerTZ
			,@minDuration MinDuration
			,@maxDuration MaxDuration
			,@avgDuration AvgDuration
			,@isTaskTriggerJob IsTaskTriggerJob
			,@lastRunRecords LastRunRecords
			,@lastRunProcessed LastRunProcessed
			,@lastRunErrors LastRunErrors

	end try

	begin catch
		set @xState = xact_state()
		
		if @tranCount > 0 and @xState = 1
		begin
			rollback transaction @sprocName																			-- committable wrapping trx exists: rollback to savepoint
		end
		else if @xState <> 0																									-- full rollback
		begin
			rollback
		end
		
		exec @errorNo = sf.pErrorRethrow																			-- process message text and re-throw the error
	end catch

	return(@errorNo)

end
GO
