SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[pPracticeRegister#Default]
	 @zContext                                 xml               = null                -- default values provided from client-tier (if any)
	,@SetFKDefaults                            bit               = 0                   -- when 1, mandatory FK's are returned as -1 instead of NULL
as
/*********************************************************************************************************************************
Procedure : dbo.pPracticeRegister#Default
Notice    : Copyright Â© 2019 Softworks Group Inc.
Summary   : provides a blank row with default values for presentation in the UI for "new" dbo.PracticeRegister records
-----------------------------------------------------------------------------------------------------------------------------------
Author    : Generated by DB Studio: pSprocGen | Designer: Tim Edlund
Version   : April 2019
-----------------------------------------------------------------------------------------------------------------------------------
Comments
--------
This procedure is used in maintenance of the dbo.PracticeRegister table. When a new record is to be added from the UI, this procedure
is called to return a blank record with default values. If the client-tier is providing the context for the insert, such as a parent
key value for the new record, it must be passed in the @zContext XML parameter. Multiple values may be passed. The standard format
is: <Parameters MyParameter="1000001"/>.

The @SetFKDefaults parameter can be set to 1 to cause the procedure to return mandatory FK values as -1 rather than NULL. This avoids
the need to create complex types for the procedure on architectures which are not using RIA services.

Note that default values for text, ntext and binary type columns is not supported.  These data types are not permitted as local
variables in the current version of SQL Server and should be replaced by varchar(max) and nvarchar(max) where possible.

Some default values are built-in to the shell of the sproc.  The base table column defaults set in the variable declarations below
were obtained from database default constraints which existed at the time the procedure was generated. The declarations include all
columns of the vPracticeRegister entity view, however, only some values (as noted above) are eligible for default setting.  The other
parameters are included for setting context for the table-specific or client-specific logic of the procedure (if any). Default values
returning a question mark "?", system date, or 0 are provided for non-base table columns which are mandatory.  This is done to avoid
compilation errors from the Entity Framework, however, the values will not be applied since they are not in the base table row.

Two levels of customization of the procedure shell are supported. Table-specific logic can be added through the tagged section and a
call to an extended procedure supports client-specific customization. Logic implemented within the code tags is part of the base
product and applies to all client configurations. Client-specific customizations must be implemented in the ext.pPracticeRegister
procedure. The extended procedure is only called where it exists in database. The parameter "@Mode" is set to "default.pre" to
advise ext.pPracticeRegister of the context of the call. All other parameters are also passed, however, only those parameters eligible
for default setting are passed for "output". All parameters corresponding to entity view columns are returned through a SELECT statement.

In order to simplify working with the XML parameter values, logic in the procedure parses the XML and assigns values to variables where
the variable name matches the column name in the XML (assumes single row).  The variables are then available to the table-specific and
client-specific logic.  The @zContext parameter is also passed, unmodified, to the extended procedure to support situations where values
are passed that are not mapped to column names.


-------------------------------------------------------------------------------------------------------------------------------- */

begin
	set nocount on

	declare
		 @errorNo                                      int = 0								-- 0 no error, <50000 SQL error, else business rule
		,@tranCount                                    int = @@trancount			-- determines whether a wrapping transaction exists
		,@sprocName                                    nvarchar(128) = object_name(@@procid)						-- name of currently executing procedure
		,@xState                                       int										-- error state detected in catch block
		,@ON                                       bit = cast(1 as bit)				-- constant for bit comparisons
		,@OFF                                      bit = cast(0 as bit)				-- constant for bit comparisons
		,@practiceRegisterSID                      int               = -1			-- specific default required by EF - do not override
		,@practiceRegisterTypeSID                  int               = null		-- no default provided from DB constraint - OK to override
		,@registrationScheduleSID                  int               = null		-- no default provided from DB constraint - OK to override
		,@practiceRegisterName                     nvarchar(65)      = null		-- no default provided from DB constraint - OK to override
		,@practiceRegisterLabel                    nvarchar(35)      = null		-- no default provided from DB constraint - OK to override
		,@isActivePractice                         bit               = (1)		-- default provided from DB constraint - OK to override
		,@isPublicRegistryEnabled                  bit               = (1)		-- default provided from DB constraint - OK to override
		,@isRenewalEnabled                         bit               = (1)		-- default provided from DB constraint - OK to override
		,@isLearningPlanEnabled                    bit               = (0)		-- default provided from DB constraint - OK to override
		,@isNextCEFormAutoAdded                    bit               = CONVERT(bit,(1))									-- default provided from DB constraint - OK to override
		,@isEligibleSupervisor                     bit               = CONVERT(bit,(0))									-- default provided from DB constraint - OK to override
		,@isSupervisionRequired                    bit               = CONVERT(bit,(0))									-- default provided from DB constraint - OK to override
		,@isEmploymentTerminated                   bit               = CONVERT(bit,(0))									-- default provided from DB constraint - OK to override
		,@isGroupMembershipTerminated              bit               = CONVERT(bit,(0))									-- default provided from DB constraint - OK to override
		,@termPermitDays                           int               = (0)		-- default provided from DB constraint - OK to override
		,@registerRank                             smallint          = (500)	-- default provided from DB constraint - OK to override
		,@learningModelSID                         int               = null		-- no default provided from DB constraint - OK to override
		,@reasonGroupSID                           int               = null		-- no default provided from DB constraint - OK to override
		,@isDefault                                bit               = (0)		-- default provided from DB constraint - OK to override
		,@isDefaultInactivePractice                bit               = CONVERT(bit,(0))									-- default provided from DB constraint - OK to override
		,@description                              varbinary(max)    = null		-- no default provided from DB constraint - OK to override
		,@isActive                                 bit               = (1)		-- default provided from DB constraint - OK to override
		,@userDefinedColumns                       xml               = null		-- no default provided from DB constraint - OK to override
		,@practiceRegisterXID                      varchar(150)      = null		-- no default provided from DB constraint - OK to override
		,@legacyKey                                nvarchar(50)      = null		-- no default provided from DB constraint - OK to override
		,@isDeleted                                bit               = (0)		-- default provided from DB constraint - OK to override
		,@createUser                               nvarchar(75)      = suser_sname()										-- default value ignored (value set by UI)
		,@createTime                               datetimeoffset(7) = sysdatetimeoffset()							-- default value ignored (set to system time)
		,@updateUser                               nvarchar(75)      = suser_sname()										-- default value ignored (value set by UI)
		,@updateTime                               datetimeoffset(7) = sysdatetimeoffset()							-- default value ignored (set to system time)
		,@rowGUID                                  uniqueidentifier  = newid()-- default value ignored (value set by system)
		,@rowStamp                                 timestamp         = null		-- default value ignored (value set by system)
		,@practiceRegisterTypeSCD                  varchar(15)       = '?'		-- not a base table column (default ignored)
		,@practiceRegisterTypeLabel                nvarchar(35)      = N'?'		-- not a base table column (default ignored)
		,@practiceRegisterTypeCategory             nvarchar(65)								-- not a base table column (default ignored)
		,@practiceRegisterTypeIsDefault            bit               = 0			-- not a base table column (default ignored)
		,@practiceRegisterTypeIsActive             bit               = 0			-- not a base table column (default ignored)
		,@practiceRegisterTypeRowGUID              uniqueidentifier  = newid()-- not a base table column (default ignored)
		,@registrationScheduleLabel                nvarchar(35)      = N'?'		-- not a base table column (default ignored)
		,@registrationScheduleIsDefault            bit               = 0			-- not a base table column (default ignored)
		,@registrationScheduleIsActive             bit               = 0			-- not a base table column (default ignored)
		,@registrationScheduleRowGUID              uniqueidentifier  = newid()-- not a base table column (default ignored)
		,@learningModelSCD                         varchar(15)								-- not a base table column (default ignored)
		,@learningModelLabel                       nvarchar(35)								-- not a base table column (default ignored)
		,@learningModelIsDefault                   bit												-- not a base table column (default ignored)
		,@unitTypeSID                              int												-- not a base table column (default ignored)
		,@cycleLengthYears                         smallint										-- not a base table column (default ignored)
		,@isCycleStartedYear1                      bit												-- not a base table column (default ignored)
		,@maximumCarryOver                         decimal(5,2)								-- not a base table column (default ignored)
		,@learningModelRowGUID                     uniqueidentifier						-- not a base table column (default ignored)
		,@reasonGroupSCD                           varchar(20)								-- not a base table column (default ignored)
		,@reasonGroupLabel                         nvarchar(35)								-- not a base table column (default ignored)
		,@isLockedGroup                            bit												-- not a base table column (default ignored)
		,@reasonGroupRowGUID                       uniqueidentifier						-- not a base table column (default ignored)
		,@isDeleteEnabled                          bit												-- not a base table column (default ignored)
		,@isReselected                             tinyint           = 1			-- specific default required by EF - do not override
		,@isNullApplied                            bit               = 1			-- specific default required by EF - do not override
		,@registrantAppFormVersionSID              int												-- not a base table column (default ignored)
		,@registrantAppVerificationFormVersionSID  int												-- not a base table column (default ignored)
		,@registrantRenewalFormVersionSID          int												-- not a base table column (default ignored)
		,@registrantRenewalReviewFormVersionSID    int												-- not a base table column (default ignored)
		,@competenceReviewFormVersionSID           int												-- not a base table column (default ignored)
		,@competenceReviewAssessmentFormVersionSID int												-- not a base table column (default ignored)
		,@currentRegistrationYear                  smallint										-- not a base table column (default ignored)
		,@currentRenewalYear                       smallint										-- not a base table column (default ignored)
		,@currentReinstatementYear                 smallint										-- not a base table column (default ignored)
		,@nextReinstatementYear                    smallint										-- not a base table column (default ignored)
		,@isCurrentUserVerifier                    bit												-- not a base table column (default ignored)
		,@isLearningModelApplied                   bit												-- not a base table column (default ignored)

	begin try

		-- use a transaction so that any additional updates implemented through the extended
		-- procedure or through table-specific logic succeed or fail as a logical unit

		if @tranCount = 0																											-- no outer transaction
		begin
			begin transaction
		end
		else																																	-- outer transaction so create save point
		begin
			save transaction @sprocName
		end
		-- set mandatory FK values to -1 where requested
		
		if @SetFKDefaults = @ON
		begin
			set @practiceRegisterTypeSID = -1
			set @registrationScheduleSID = -1
		end

		-- assign literal defaults passed through @zContext where
		-- provided otherwise leave database default in place
		
		select
			 @practiceRegisterTypeSID      = isnull(context.node.value('@PracticeRegisterTypeSID'    ,'int'           ),@practiceRegisterTypeSID)
			,@registrationScheduleSID      = isnull(context.node.value('@RegistrationScheduleSID'    ,'int'           ),@registrationScheduleSID)
			,@practiceRegisterName         = isnull(context.node.value('@PracticeRegisterName'       ,'nvarchar(65)'  ),@practiceRegisterName)
			,@practiceRegisterLabel        = isnull(context.node.value('@PracticeRegisterLabel'      ,'nvarchar(35)'  ),@practiceRegisterLabel)
			,@isActivePractice             = isnull(context.node.value('@IsActivePractice'           ,'bit'           ),@isActivePractice)
			,@isPublicRegistryEnabled      = isnull(context.node.value('@IsPublicRegistryEnabled'    ,'bit'           ),@isPublicRegistryEnabled)
			,@isRenewalEnabled             = isnull(context.node.value('@IsRenewalEnabled'           ,'bit'           ),@isRenewalEnabled)
			,@isLearningPlanEnabled        = isnull(context.node.value('@IsLearningPlanEnabled'      ,'bit'           ),@isLearningPlanEnabled)
			,@isNextCEFormAutoAdded        = isnull(context.node.value('@IsNextCEFormAutoAdded'      ,'bit'           ),@isNextCEFormAutoAdded)
			,@isEligibleSupervisor         = isnull(context.node.value('@IsEligibleSupervisor'       ,'bit'           ),@isEligibleSupervisor)
			,@isSupervisionRequired        = isnull(context.node.value('@IsSupervisionRequired'      ,'bit'           ),@isSupervisionRequired)
			,@isEmploymentTerminated       = isnull(context.node.value('@IsEmploymentTerminated'     ,'bit'           ),@isEmploymentTerminated)
			,@isGroupMembershipTerminated  = isnull(context.node.value('@IsGroupMembershipTerminated','bit'           ),@isGroupMembershipTerminated)
			,@termPermitDays               = isnull(context.node.value('@TermPermitDays'             ,'int'           ),@termPermitDays)
			,@registerRank                 = isnull(context.node.value('@RegisterRank'               ,'smallint'      ),@registerRank)
			,@learningModelSID             = isnull(context.node.value('@LearningModelSID'           ,'int'           ),@learningModelSID)
			,@reasonGroupSID               = isnull(context.node.value('@ReasonGroupSID'             ,'int'           ),@reasonGroupSID)
			,@isDefault                    = isnull(context.node.value('@IsDefault'                  ,'bit'           ),@isDefault)
			,@isDefaultInactivePractice    = isnull(context.node.value('@IsDefaultInactivePractice'  ,'bit'           ),@isDefaultInactivePractice)
			,@description                  = isnull(context.node.value('@Description'                ,'varbinary(max)'),@description)
			,@isActive                     = isnull(context.node.value('@IsActive'                   ,'bit'           ),@isActive)
			,@practiceRegisterXID          = isnull(context.node.value('@PracticeRegisterXID'        ,'varchar(150)'  ),@practiceRegisterXID)
			,@legacyKey                    = isnull(context.node.value('@LegacyKey'                  ,'nvarchar(50)'  ),@legacyKey)
		from
			@zContext.nodes('Parameters') as context(node)
		
		-- set default value on foreign keys where configured
		-- and where no DB or literal value was passed for it
		
		if isnull(@learningModelSID       ,0) = 0 select @learningModelSID        = x.LearningModelSID        from dbo.LearningModel        x where x.IsDefault = @ON
		if isnull(@practiceRegisterTypeSID,0) = 0 select @practiceRegisterTypeSID = x.PracticeRegisterTypeSID from dbo.PracticeRegisterType x where x.IsDefault = @ON
		if isnull(@registrationScheduleSID,0) = 0 select @registrationScheduleSID = x.RegistrationScheduleSID from dbo.RegistrationSchedule x where x.IsDefault = @ON

		--! <Overrides>
		--  insert default value logic here ...
		--! </Overrides>
	
		-- call the extended version of the procedure (if it exists) for "default.pre" mode
		
		if exists
		(
			select
				1
			from
				sf.vRoutine r
			where
				r.SchemaName = 'ext'
			and
				r.RoutineName = 'pPracticeRegister'
		)
		begin
		
			exec @errorNo = ext.pPracticeRegister
				 @Mode                                     = 'default.pre'
				,@PracticeRegisterSID = @practiceRegisterSID
				,@PracticeRegisterTypeSID = @practiceRegisterTypeSID output
				,@RegistrationScheduleSID = @registrationScheduleSID output
				,@PracticeRegisterName = @practiceRegisterName output
				,@PracticeRegisterLabel = @practiceRegisterLabel output
				,@IsActivePractice = @isActivePractice output
				,@IsPublicRegistryEnabled = @isPublicRegistryEnabled output
				,@IsRenewalEnabled = @isRenewalEnabled output
				,@IsLearningPlanEnabled = @isLearningPlanEnabled output
				,@IsNextCEFormAutoAdded = @isNextCEFormAutoAdded output
				,@IsEligibleSupervisor = @isEligibleSupervisor output
				,@IsSupervisionRequired = @isSupervisionRequired output
				,@IsEmploymentTerminated = @isEmploymentTerminated output
				,@IsGroupMembershipTerminated = @isGroupMembershipTerminated output
				,@TermPermitDays = @termPermitDays output
				,@RegisterRank = @registerRank output
				,@LearningModelSID = @learningModelSID output
				,@ReasonGroupSID = @reasonGroupSID output
				,@IsDefault = @isDefault output
				,@IsDefaultInactivePractice = @isDefaultInactivePractice output
				,@Description = @description output
				,@IsActive = @isActive output
				,@UserDefinedColumns = @userDefinedColumns output
				,@PracticeRegisterXID = @practiceRegisterXID output
				,@LegacyKey = @legacyKey output
				,@IsDeleted = @isDeleted
				,@CreateUser = @createUser
				,@CreateTime = @createTime
				,@UpdateUser = @updateUser
				,@UpdateTime = @updateTime
				,@RowGUID = @rowGUID
				,@RowStamp = @rowStamp
				,@PracticeRegisterTypeSCD = @practiceRegisterTypeSCD
				,@PracticeRegisterTypeLabel = @practiceRegisterTypeLabel
				,@PracticeRegisterTypeCategory = @practiceRegisterTypeCategory
				,@PracticeRegisterTypeIsDefault = @practiceRegisterTypeIsDefault
				,@PracticeRegisterTypeIsActive = @practiceRegisterTypeIsActive
				,@PracticeRegisterTypeRowGUID = @practiceRegisterTypeRowGUID
				,@RegistrationScheduleLabel = @registrationScheduleLabel
				,@RegistrationScheduleIsDefault = @registrationScheduleIsDefault
				,@RegistrationScheduleIsActive = @registrationScheduleIsActive
				,@RegistrationScheduleRowGUID = @registrationScheduleRowGUID
				,@LearningModelSCD = @learningModelSCD
				,@LearningModelLabel = @learningModelLabel
				,@LearningModelIsDefault = @learningModelIsDefault
				,@UnitTypeSID = @unitTypeSID
				,@CycleLengthYears = @cycleLengthYears
				,@IsCycleStartedYear1 = @isCycleStartedYear1
				,@MaximumCarryOver = @maximumCarryOver
				,@LearningModelRowGUID = @learningModelRowGUID
				,@ReasonGroupSCD = @reasonGroupSCD
				,@ReasonGroupLabel = @reasonGroupLabel
				,@IsLockedGroup = @isLockedGroup
				,@ReasonGroupRowGUID = @reasonGroupRowGUID
				,@IsDeleteEnabled = @isDeleteEnabled
				,@IsReselected = @isReselected
				,@IsNullApplied = @isNullApplied
				,@zContext = @zContext output
				,@RegistrantAppFormVersionSID = @registrantAppFormVersionSID
				,@RegistrantAppVerificationFormVersionSID = @registrantAppVerificationFormVersionSID
				,@RegistrantRenewalFormVersionSID = @registrantRenewalFormVersionSID
				,@RegistrantRenewalReviewFormVersionSID = @registrantRenewalReviewFormVersionSID
				,@CompetenceReviewFormVersionSID = @competenceReviewFormVersionSID
				,@CompetenceReviewAssessmentFormVersionSID = @competenceReviewAssessmentFormVersionSID
				,@CurrentRegistrationYear = @currentRegistrationYear
				,@CurrentRenewalYear = @currentRenewalYear
				,@CurrentReinstatementYear = @currentReinstatementYear
				,@NextReinstatementYear = @nextReinstatementYear
				,@IsCurrentUserVerifier = @isCurrentUserVerifier
				,@IsLearningModelApplied = @isLearningModelApplied
		
		end

		select
			 @practiceRegisterSID PracticeRegisterSID
			,@practiceRegisterTypeSID PracticeRegisterTypeSID
			,@registrationScheduleSID RegistrationScheduleSID
			,@practiceRegisterName PracticeRegisterName
			,@practiceRegisterLabel PracticeRegisterLabel
			,@isActivePractice IsActivePractice
			,@isPublicRegistryEnabled IsPublicRegistryEnabled
			,@isRenewalEnabled IsRenewalEnabled
			,@isLearningPlanEnabled IsLearningPlanEnabled
			,@isNextCEFormAutoAdded IsNextCEFormAutoAdded
			,@isEligibleSupervisor IsEligibleSupervisor
			,@isSupervisionRequired IsSupervisionRequired
			,@isEmploymentTerminated IsEmploymentTerminated
			,@isGroupMembershipTerminated IsGroupMembershipTerminated
			,@termPermitDays TermPermitDays
			,@registerRank RegisterRank
			,@learningModelSID LearningModelSID
			,@reasonGroupSID ReasonGroupSID
			,@isDefault IsDefault
			,@isDefaultInactivePractice IsDefaultInactivePractice
			,@description Description
			,@isActive IsActive
			,@userDefinedColumns UserDefinedColumns
			,@practiceRegisterXID PracticeRegisterXID
			,@legacyKey LegacyKey
			,@isDeleted IsDeleted
			,@createUser CreateUser
			,@createTime CreateTime
			,@updateUser UpdateUser
			,@updateTime UpdateTime
			,@rowGUID RowGUID
			,@rowStamp RowStamp
			,@practiceRegisterTypeSCD PracticeRegisterTypeSCD
			,@practiceRegisterTypeLabel PracticeRegisterTypeLabel
			,@practiceRegisterTypeCategory PracticeRegisterTypeCategory
			,@practiceRegisterTypeIsDefault PracticeRegisterTypeIsDefault
			,@practiceRegisterTypeIsActive PracticeRegisterTypeIsActive
			,@practiceRegisterTypeRowGUID PracticeRegisterTypeRowGUID
			,@registrationScheduleLabel RegistrationScheduleLabel
			,@registrationScheduleIsDefault RegistrationScheduleIsDefault
			,@registrationScheduleIsActive RegistrationScheduleIsActive
			,@registrationScheduleRowGUID RegistrationScheduleRowGUID
			,@learningModelSCD LearningModelSCD
			,@learningModelLabel LearningModelLabel
			,@learningModelIsDefault LearningModelIsDefault
			,@unitTypeSID UnitTypeSID
			,@cycleLengthYears CycleLengthYears
			,@isCycleStartedYear1 IsCycleStartedYear1
			,@maximumCarryOver MaximumCarryOver
			,@learningModelRowGUID LearningModelRowGUID
			,@reasonGroupSCD ReasonGroupSCD
			,@reasonGroupLabel ReasonGroupLabel
			,@isLockedGroup IsLockedGroup
			,@reasonGroupRowGUID ReasonGroupRowGUID
			,@isDeleteEnabled IsDeleteEnabled
			,@isReselected IsReselected
			,@isNullApplied IsNullApplied
			,@zContext zContext
			,@registrantAppFormVersionSID RegistrantAppFormVersionSID
			,@registrantAppVerificationFormVersionSID RegistrantAppVerificationFormVersionSID
			,@registrantRenewalFormVersionSID RegistrantRenewalFormVersionSID
			,@registrantRenewalReviewFormVersionSID RegistrantRenewalReviewFormVersionSID
			,@competenceReviewFormVersionSID CompetenceReviewFormVersionSID
			,@competenceReviewAssessmentFormVersionSID CompetenceReviewAssessmentFormVersionSID
			,@currentRegistrationYear CurrentRegistrationYear
			,@currentRenewalYear CurrentRenewalYear
			,@currentReinstatementYear CurrentReinstatementYear
			,@nextReinstatementYear NextReinstatementYear
			,@isCurrentUserVerifier IsCurrentUserVerifier
			,@isLearningModelApplied IsLearningModelApplied

	end try

	begin catch
		set @xState = xact_state()
		
		if @tranCount > 0 and @xState = 1
		begin
			rollback transaction @sprocName																			-- committable wrapping trx exists: rollback to savepoint
		end
		else if @xState <> 0																									-- full rollback
		begin
			rollback
		end
		
		exec @errorNo = sf.pErrorRethrow																			-- process message text and re-throw the error
	end catch

	return(@errorNo)

end
GO
