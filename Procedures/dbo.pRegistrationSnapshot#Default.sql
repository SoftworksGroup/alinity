SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[pRegistrationSnapshot#Default]
	 @zContext                          xml               = null                            -- default values provided from client-tier (if any)
	,@SetFKDefaults                     bit               = 0                               -- when 1, mandatory FK's are returned as -1 instead of NULL
as
/*********************************************************************************************************************************
Procedure : dbo.pRegistrationSnapshot#Default
Notice    : Copyright Â© 2019 Softworks Group Inc.
Summary   : provides a blank row with default values for presentation in the UI for "new" dbo.RegistrationSnapshot records
-----------------------------------------------------------------------------------------------------------------------------------
Author    : Generated by DB Studio: pSprocGen | Designer: Tim Edlund
Version   : March 2019
-----------------------------------------------------------------------------------------------------------------------------------
Comments
--------
This procedure is used in maintenance of the dbo.RegistrationSnapshot table. When a new record is to be added from the UI, this procedure
is called to return a blank record with default values. If the client-tier is providing the context for the insert, such as a parent
key value for the new record, it must be passed in the @zContext XML parameter. Multiple values may be passed. The standard format
is: <Parameters MyParameter="1000001"/>.

The @SetFKDefaults parameter can be set to 1 to cause the procedure to return mandatory FK values as -1 rather than NULL. This avoids
the need to create complex types for the procedure on architectures which are not using RIA services.

Note that default values for text, ntext and binary type columns is not supported.  These data types are not permitted as local
variables in the current version of SQL Server and should be replaced by varchar(max) and nvarchar(max) where possible.

Some default values are built-in to the shell of the sproc.  The base table column defaults set in the variable declarations below
were obtained from database default constraints which existed at the time the procedure was generated. The declarations include all
columns of the vRegistrationSnapshot entity view, however, only some values (as noted above) are eligible for default setting.  The other
parameters are included for setting context for the table-specific or client-specific logic of the procedure (if any). Default values
returning a question mark "?", system date, or 0 are provided for non-base table columns which are mandatory.  This is done to avoid
compilation errors from the Entity Framework, however, the values will not be applied since they are not in the base table row.

Two levels of customization of the procedure shell are supported. Table-specific logic can be added through the tagged section and a
call to an extended procedure supports client-specific customization. Logic implemented within the code tags is part of the base
product and applies to all client configurations. Client-specific customizations must be implemented in the ext.pRegistrationSnapshot
procedure. The extended procedure is only called where it exists in database. The parameter "@Mode" is set to "default.pre" to
advise ext.pRegistrationSnapshot of the context of the call. All other parameters are also passed, however, only those parameters eligible
for default setting are passed for "output". All parameters corresponding to entity view columns are returned through a SELECT statement.

In order to simplify working with the XML parameter values, logic in the procedure parses the XML and assigns values to variables where
the variable name matches the column name in the XML (assumes single row).  The variables are then available to the table-specific and
client-specific logic.  The @zContext parameter is also passed, unmodified, to the extended procedure to support situations where values
are passed that are not mapped to column names.


-------------------------------------------------------------------------------------------------------------------------------- */

begin
	set nocount on

	declare
		 @errorNo                                      int = 0								-- 0 no error, <50000 SQL error, else business rule
		,@tranCount                                    int = @@trancount			-- determines whether a wrapping transaction exists
		,@sprocName                                    nvarchar(128) = object_name(@@procid)						-- name of currently executing procedure
		,@xState                                       int										-- error state detected in catch block
		,@ON                                bit = cast(1 as bit)							-- constant for bit comparisons
		,@OFF                               bit = cast(0 as bit)							-- constant for bit comparisons
		,@registrationSnapshotSID           int               = -1						-- specific default required by EF - do not override
		,@registrationSnapshotTypeSID       int               = null					-- no default provided from DB constraint - OK to override
		,@registrationSnapshotLabel         nvarchar(35)      = null					-- no default provided from DB constraint - OK to override
		,@registrationYear                  smallint          = dbo.fRegistrationYear#Current()					-- default provided from DB constraint - OK to override
		,@description                       nvarchar(max)     = null					-- no default provided from DB constraint - OK to override
		,@queuedTime                        datetimeoffset(7) = sysdatetimeoffset()											-- default provided from DB constraint - OK to override
		,@lockedTime                        datetimeoffset(7) = null					-- no default provided from DB constraint - OK to override
		,@lastCodeUpdateTime                datetimeoffset(7) = null					-- no default provided from DB constraint - OK to override
		,@lastVerifiedTime                  datetimeoffset(7) = null					-- no default provided from DB constraint - OK to override
		,@jobRunSID                         int               = null					-- no default provided from DB constraint - OK to override
		,@userDefinedColumns                xml               = null					-- no default provided from DB constraint - OK to override
		,@registrationSnapshotXID           varchar(150)      = null					-- no default provided from DB constraint - OK to override
		,@legacyKey                         nvarchar(50)      = null					-- no default provided from DB constraint - OK to override
		,@isDeleted                         bit               = (0)						-- default provided from DB constraint - OK to override
		,@createUser                        nvarchar(75)      = suser_sname()	-- default value ignored (value set by UI)
		,@createTime                        datetimeoffset(7) = sysdatetimeoffset()											-- default value ignored (set to system time)
		,@updateUser                        nvarchar(75)      = suser_sname()	-- default value ignored (value set by UI)
		,@updateTime                        datetimeoffset(7) = sysdatetimeoffset()											-- default value ignored (set to system time)
		,@rowGUID                           uniqueidentifier  = newid()				-- default value ignored (value set by system)
		,@rowStamp                          timestamp         = null					-- default value ignored (value set by system)
		,@registrationSnapshotTypeLabel     nvarchar(35)      = N'?'					-- not a base table column (default ignored)
		,@registrationSnapshotTypeSCD       varchar(15)       = '?'						-- not a base table column (default ignored)
		,@registrationSnapshotLabelTemplate nvarchar(50)											-- not a base table column (default ignored)
		,@registrationSnapshotTypeIsDefault bit               = 0							-- not a base table column (default ignored)
		,@registrationSnapshotTypeIsActive  bit               = 0							-- not a base table column (default ignored)
		,@registrationSnapshotTypeRowGUID   uniqueidentifier  = newid()				-- not a base table column (default ignored)
		,@jobSID                            int																-- not a base table column (default ignored)
		,@conversationHandle                uniqueidentifier									-- not a base table column (default ignored)
		,@startTime                         datetimeoffset(7)									-- not a base table column (default ignored)
		,@endTime                           datetimeoffset(7)									-- not a base table column (default ignored)
		,@totalRecords                      int																-- not a base table column (default ignored)
		,@totalErrors                       int																-- not a base table column (default ignored)
		,@recordsProcessed                  int																-- not a base table column (default ignored)
		,@currentProcessLabel               nvarchar(35)											-- not a base table column (default ignored)
		,@isFailed                          bit																-- not a base table column (default ignored)
		,@isFailureCleared                  bit																-- not a base table column (default ignored)
		,@cancellationRequestTime           datetimeoffset(7)									-- not a base table column (default ignored)
		,@isCancelled                       bit																-- not a base table column (default ignored)
		,@jobRunRowGUID                     uniqueidentifier									-- not a base table column (default ignored)
		,@isDeleteEnabled                   bit																-- not a base table column (default ignored)
		,@isReselected                      tinyint           = 1							-- specific default required by EF - do not override
		,@isNullApplied                     bit               = 1							-- specific default required by EF - do not override
		,@isLocked                          bit																-- not a base table column (default ignored)
		,@isLockEnabled                     bit																-- not a base table column (default ignored)
		,@isUnlockEnabled                   bit																-- not a base table column (default ignored)
		,@isUpdateEnabled                   bit																-- not a base table column (default ignored)
		,@profileCount                      int																-- not a base table column (default ignored)
		,@inValidCount                      int																-- not a base table column (default ignored)
		,@modifiedCount                     int																-- not a base table column (default ignored)
		,@queuedDateCTZ                     date															-- not a base table column (default ignored)
		,@queuedTimeCTZ                     time(7)														-- not a base table column (default ignored)
		,@queuedDateTimeCTZ                 datetime													-- not a base table column (default ignored)
		,@registrationYearLabel             varchar(25)												-- not a base table column (default ignored)
		,@snapshotStatusLabel               nvarchar(35)											-- not a base table column (default ignored)
		,@lastCodeUpdateStatus              nvarchar(4000)										-- not a base table column (default ignored)
		,@lastVerifiedStatus                nvarchar(4000)										-- not a base table column (default ignored)

	begin try

		-- use a transaction so that any additional updates implemented through the extended
		-- procedure or through table-specific logic succeed or fail as a logical unit

		if @tranCount = 0																											-- no outer transaction
		begin
			begin transaction
		end
		else																																	-- outer transaction so create save point
		begin
			save transaction @sprocName
		end
		-- set mandatory FK values to -1 where requested
		
		if @SetFKDefaults = @ON
		begin
			set @registrationSnapshotTypeSID = -1
		end

		-- assign literal defaults passed through @zContext where
		-- provided otherwise leave database default in place
		
		select
			 @registrationSnapshotTypeSID  = isnull(context.node.value('@RegistrationSnapshotTypeSID','int'              ),@registrationSnapshotTypeSID)
			,@registrationSnapshotLabel    = isnull(context.node.value('@RegistrationSnapshotLabel'  ,'nvarchar(35)'     ),@registrationSnapshotLabel)
			,@registrationYear             = isnull(context.node.value('@RegistrationYear'           ,'smallint'         ),@registrationYear)
			,@description                  = isnull(context.node.value('@Description'                ,'nvarchar(max)'    ),@description)
			,@queuedTime                   = isnull(context.node.value('@QueuedTime'                 ,'datetimeoffset(7)'),@queuedTime)
			,@lockedTime                   = isnull(context.node.value('@LockedTime'                 ,'datetimeoffset(7)'),@lockedTime)
			,@lastCodeUpdateTime           = isnull(context.node.value('@LastCodeUpdateTime'         ,'datetimeoffset(7)'),@lastCodeUpdateTime)
			,@lastVerifiedTime             = isnull(context.node.value('@LastVerifiedTime'           ,'datetimeoffset(7)'),@lastVerifiedTime)
			,@jobRunSID                    = isnull(context.node.value('@JobRunSID'                  ,'int'              ),@jobRunSID)
			,@registrationSnapshotXID      = isnull(context.node.value('@RegistrationSnapshotXID'    ,'varchar(150)'     ),@registrationSnapshotXID)
			,@legacyKey                    = isnull(context.node.value('@LegacyKey'                  ,'nvarchar(50)'     ),@legacyKey)
		from
			@zContext.nodes('Parameters') as context(node)
		
		-- set default value on foreign keys where configured
		-- and where no DB or literal value was passed for it
		
		if isnull(@registrationSnapshotTypeSID,0) = 0 select @registrationSnapshotTypeSID = x.RegistrationSnapshotTypeSID from dbo.RegistrationSnapshotType x where x.IsDefault = @ON

		--! <Overrides>
		-- Tim Edlund | Jul 2018
		-- Default the queued time components to the
		-- queued date and time in the user's timezone

		if @queuedTime is not null
		begin

			if @queuedDateCTZ is null
			begin
				set @queuedDateCTZ = sf.fDTOffsetToClientDate(@queuedTime);
			end;

			if @queuedTimeCTZ is null
			begin
				set @queuedTimeCTZ = sf.fDTOffsetToClientDateTime(@queuedTime);
			end;

		end;

		-- Tim Edlund | Jul 2018
		-- Default the label based on the template if
		-- specified for this type.  The queued time
		-- is used as a replacement for "{DATE}"

		if @registrationSnapshotLabel is null and @registrationSnapshotTypeSID is not null and @queuedTime is not null
		begin

			select
				@registrationSnapshotLabel = replace(rst.RegistrationSnapshotLabelTemplate, '{DATE}', format(sf.fDTOffsetToClientDate(@queuedTime), 'yyyyMMdd'))
			from
				dbo.RegistrationSnapshotType rst
			where
				rst.RegistrationSnapshotTypeSID = @registrationSnapshotTypeSID;

		end;

		-- Tim Edlund | Jul 2018
		-- If the label exists - extend with a counter

		declare
			@i int = 1
		 ,@j int;

		while exists
					(
						select
							1
						from
							dbo.RegistrationSnapshot rs
						where
							rs.RegistrationSnapshotLabel = @registrationSnapshotLabel
					) and @i < 100
		begin

			set @i += 1;
			set @j = charindex('(', @registrationSnapshotLabel);

			if @j - 1 > 0
			begin
				set @registrationSnapshotLabel = left(@registrationSnapshotLabel, @j - 1);
			end;

			set @registrationSnapshotLabel = ltrim(rtrim(@registrationSnapshotLabel)) + ' (' + ltrim(@i) + ')';

		end;
		--! </Overrides>
	
		-- call the extended version of the procedure (if it exists) for "default.pre" mode
		
		if exists
		(
			select
				1
			from
				sf.vRoutine r
			where
				r.SchemaName = 'ext'
			and
				r.RoutineName = 'pRegistrationSnapshot'
		)
		begin
		
			exec @errorNo = ext.pRegistrationSnapshot
				 @Mode                              = 'default.pre'
				,@RegistrationSnapshotSID = @registrationSnapshotSID
				,@RegistrationSnapshotTypeSID = @registrationSnapshotTypeSID output
				,@RegistrationSnapshotLabel = @registrationSnapshotLabel output
				,@RegistrationYear = @registrationYear output
				,@Description = @description output
				,@QueuedTime = @queuedTime output
				,@LockedTime = @lockedTime output
				,@LastCodeUpdateTime = @lastCodeUpdateTime output
				,@LastVerifiedTime = @lastVerifiedTime output
				,@JobRunSID = @jobRunSID output
				,@UserDefinedColumns = @userDefinedColumns output
				,@RegistrationSnapshotXID = @registrationSnapshotXID output
				,@LegacyKey = @legacyKey output
				,@IsDeleted = @isDeleted
				,@CreateUser = @createUser
				,@CreateTime = @createTime
				,@UpdateUser = @updateUser
				,@UpdateTime = @updateTime
				,@RowGUID = @rowGUID
				,@RowStamp = @rowStamp
				,@RegistrationSnapshotTypeLabel = @registrationSnapshotTypeLabel
				,@RegistrationSnapshotTypeSCD = @registrationSnapshotTypeSCD
				,@RegistrationSnapshotLabelTemplate = @registrationSnapshotLabelTemplate
				,@RegistrationSnapshotTypeIsDefault = @registrationSnapshotTypeIsDefault
				,@RegistrationSnapshotTypeIsActive = @registrationSnapshotTypeIsActive
				,@RegistrationSnapshotTypeRowGUID = @registrationSnapshotTypeRowGUID
				,@JobSID = @jobSID
				,@ConversationHandle = @conversationHandle
				,@StartTime = @startTime
				,@EndTime = @endTime
				,@TotalRecords = @totalRecords
				,@TotalErrors = @totalErrors
				,@RecordsProcessed = @recordsProcessed
				,@CurrentProcessLabel = @currentProcessLabel
				,@IsFailed = @isFailed
				,@IsFailureCleared = @isFailureCleared
				,@CancellationRequestTime = @cancellationRequestTime
				,@IsCancelled = @isCancelled
				,@JobRunRowGUID = @jobRunRowGUID
				,@IsDeleteEnabled = @isDeleteEnabled
				,@IsReselected = @isReselected
				,@IsNullApplied = @isNullApplied
				,@zContext = @zContext output
				,@IsLocked = @isLocked
				,@IsLockEnabled = @isLockEnabled
				,@IsUnlockEnabled = @isUnlockEnabled
				,@IsUpdateEnabled = @isUpdateEnabled
				,@ProfileCount = @profileCount
				,@InValidCount = @inValidCount
				,@ModifiedCount = @modifiedCount
				,@QueuedDateCTZ = @queuedDateCTZ
				,@QueuedTimeCTZ = @queuedTimeCTZ
				,@QueuedDateTimeCTZ = @queuedDateTimeCTZ
				,@RegistrationYearLabel = @registrationYearLabel
				,@SnapshotStatusLabel = @snapshotStatusLabel
				,@LastCodeUpdateStatus = @lastCodeUpdateStatus
				,@LastVerifiedStatus = @lastVerifiedStatus
		
		end

		select
			 @registrationSnapshotSID RegistrationSnapshotSID
			,@registrationSnapshotTypeSID RegistrationSnapshotTypeSID
			,@registrationSnapshotLabel RegistrationSnapshotLabel
			,@registrationYear RegistrationYear
			,@description Description
			,@queuedTime QueuedTime
			,@lockedTime LockedTime
			,@lastCodeUpdateTime LastCodeUpdateTime
			,@lastVerifiedTime LastVerifiedTime
			,@jobRunSID JobRunSID
			,@userDefinedColumns UserDefinedColumns
			,@registrationSnapshotXID RegistrationSnapshotXID
			,@legacyKey LegacyKey
			,@isDeleted IsDeleted
			,@createUser CreateUser
			,@createTime CreateTime
			,@updateUser UpdateUser
			,@updateTime UpdateTime
			,@rowGUID RowGUID
			,@rowStamp RowStamp
			,@registrationSnapshotTypeLabel RegistrationSnapshotTypeLabel
			,@registrationSnapshotTypeSCD RegistrationSnapshotTypeSCD
			,@registrationSnapshotLabelTemplate RegistrationSnapshotLabelTemplate
			,@registrationSnapshotTypeIsDefault RegistrationSnapshotTypeIsDefault
			,@registrationSnapshotTypeIsActive RegistrationSnapshotTypeIsActive
			,@registrationSnapshotTypeRowGUID RegistrationSnapshotTypeRowGUID
			,@jobSID JobSID
			,@conversationHandle ConversationHandle
			,@startTime StartTime
			,@endTime EndTime
			,@totalRecords TotalRecords
			,@totalErrors TotalErrors
			,@recordsProcessed RecordsProcessed
			,@currentProcessLabel CurrentProcessLabel
			,@isFailed IsFailed
			,@isFailureCleared IsFailureCleared
			,@cancellationRequestTime CancellationRequestTime
			,@isCancelled IsCancelled
			,@jobRunRowGUID JobRunRowGUID
			,@isDeleteEnabled IsDeleteEnabled
			,@isReselected IsReselected
			,@isNullApplied IsNullApplied
			,@zContext zContext
			,@isLocked IsLocked
			,@isLockEnabled IsLockEnabled
			,@isUnlockEnabled IsUnlockEnabled
			,@isUpdateEnabled IsUpdateEnabled
			,@profileCount ProfileCount
			,@inValidCount InValidCount
			,@modifiedCount ModifiedCount
			,@queuedDateCTZ QueuedDateCTZ
			,@queuedTimeCTZ QueuedTimeCTZ
			,@queuedDateTimeCTZ QueuedDateTimeCTZ
			,@registrationYearLabel RegistrationYearLabel
			,@snapshotStatusLabel SnapshotStatusLabel
			,@lastCodeUpdateStatus LastCodeUpdateStatus
			,@lastVerifiedStatus LastVerifiedStatus

	end try

	begin catch
		set @xState = xact_state()
		
		if @tranCount > 0 and @xState = 1
		begin
			rollback transaction @sprocName																			-- committable wrapping trx exists: rollback to savepoint
		end
		else if @xState <> 0																									-- full rollback
		begin
			rollback
		end
		
		exec @errorNo = sf.pErrorRethrow																			-- process message text and re-throw the error
	end catch

	return(@errorNo)

end
GO
