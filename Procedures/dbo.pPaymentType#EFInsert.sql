SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[pPaymentType#EFInsert]
	 @PaymentTypeSCD             varchar(15)       = null										-- required! if not passed value must be set in custom logic prior to insert
	,@PaymentTypeLabel           nvarchar(35)      = null										-- required! if not passed value must be set in custom logic prior to insert
	,@PaymentTypeCategory        nvarchar(65)      = null										
	,@GLAccountSID               int               = null										-- required! if not passed value must be set in custom logic prior to insert
	,@PaymentStatusSID           int               = null										-- required! if not passed value must be set in custom logic prior to insert
	,@IsReferenceRequired        bit               = null										-- default: CONVERT(bit,(0))
	,@DepositDateLagDays         smallint          = null										-- default: (1)
	,@IsRefundExcludedFromGL     bit               = null										-- default: CONVERT(bit,(1))
	,@ExcludeDepositFromGLBefore date              = null										
	,@IsDefault                  bit               = null										-- default: (0)
	,@IsActive                   bit               = null										-- default: (1)
	,@UserDefinedColumns         xml               = null										
	,@PaymentTypeXID             varchar(150)      = null										
	,@LegacyKey                  nvarchar(50)      = null										
	,@CreateUser                 nvarchar(75)      = null										-- default: suser_sname()
	,@IsReselected               tinyint           = null										-- when 1 all columns in entity view are returned, 2 PK only, 0 none
	,@zContext                   xml               = null										-- other values defining context for the insert (if any)
	,@GLAccountCode              varchar(50)       = null										-- not a base table column (default ignored)
	,@GLAccountLabel             nvarchar(35)      = null										-- not a base table column (default ignored)
	,@IsRevenueAccount           bit               = null										-- not a base table column (default ignored)
	,@IsBankAccount              bit               = null										-- not a base table column (default ignored)
	,@IsTaxAccount               bit               = null										-- not a base table column (default ignored)
	,@IsPAPAccount               bit               = null										-- not a base table column (default ignored)
	,@IsUnappliedPaymentAccount  bit               = null										-- not a base table column (default ignored)
	,@DeferredGLAccountCode      varchar(50)       = null										-- not a base table column (default ignored)
	,@GLAccountIsActive          bit               = null										-- not a base table column (default ignored)
	,@GLAccountRowGUID           uniqueidentifier  = null										-- not a base table column (default ignored)
	,@PaymentStatusSCD           varchar(25)       = null										-- not a base table column (default ignored)
	,@PaymentStatusLabel         nvarchar(35)      = null										-- not a base table column (default ignored)
	,@IsPaid                     bit               = null										-- not a base table column (default ignored)
	,@PaymentStatusSequence      int               = null										-- not a base table column (default ignored)
	,@PaymentStatusRowGUID       uniqueidentifier  = null										-- not a base table column (default ignored)
	,@IsDeleteEnabled            bit               = null										-- not a base table column (default ignored)
	,@DepositDate                date              = null										-- not a base table column (default ignored)
as
/*********************************************************************************************************************************
Procedure : dbo.pPaymentType#EFInsert
Notice    : Copyright Â© 2019 Softworks Group Inc.
Summary   : Alternate call syntax for pPaymentType#Insert for use with MS Entity Framework (does not declare PK output parameter)
-----------------------------------------------------------------------------------------------------------------------------------
Author    : Generated by DB Studio: pSprocGen | Designer: Tim Edlund
Version   : March 2019
-----------------------------------------------------------------------------------------------------------------------------------
Comments
--------
This procedure is a wrapper for the standard insert procedure for the table. It is provided particularly for application using the
Microsoft Entity Framework (EF). The current version of the EF generates an error if an entity attribute is defined as an output
parameter. This procedure does not declare the primary key output parameter but passes all remaining parameters to the standard
insert procedure.

-------------------------------------------------------------------------------------------------------------------------------- */

begin
	set nocount on

	declare
		 @errorNo                                      int = 0								-- 0 no error, <50000 SQL error, else business rule
		,@tranCount                                    int = @@trancount			-- determines whether a wrapping transaction exists
		,@sprocName                                    nvarchar(128) = object_name(@@procid)						-- name of currently executing procedure
		,@xState                                       int										-- error state detected in catch block

	begin try

		-- use a transaction so that any additional updates implemented through the extended
		-- procedure or through table-specific logic succeed or fail as a logical unit

		if @tranCount = 0																											-- no outer transaction
		begin
			begin transaction
		end
		else																																	-- outer transaction so create save point
		begin
			save transaction @sprocName
		end

		-- call the main procedure

		exec @errorNo = dbo.pPaymentType#Insert
			 @PaymentTypeSCD             = @PaymentTypeSCD
			,@PaymentTypeLabel           = @PaymentTypeLabel
			,@PaymentTypeCategory        = @PaymentTypeCategory
			,@GLAccountSID               = @GLAccountSID
			,@PaymentStatusSID           = @PaymentStatusSID
			,@IsReferenceRequired        = @IsReferenceRequired
			,@DepositDateLagDays         = @DepositDateLagDays
			,@IsRefundExcludedFromGL     = @IsRefundExcludedFromGL
			,@ExcludeDepositFromGLBefore = @ExcludeDepositFromGLBefore
			,@IsDefault                  = @IsDefault
			,@IsActive                   = @IsActive
			,@UserDefinedColumns         = @UserDefinedColumns
			,@PaymentTypeXID             = @PaymentTypeXID
			,@LegacyKey                  = @LegacyKey
			,@CreateUser                 = @CreateUser
			,@IsReselected               = @IsReselected
			,@zContext                   = @zContext
			,@GLAccountCode              = @GLAccountCode
			,@GLAccountLabel             = @GLAccountLabel
			,@IsRevenueAccount           = @IsRevenueAccount
			,@IsBankAccount              = @IsBankAccount
			,@IsTaxAccount               = @IsTaxAccount
			,@IsPAPAccount               = @IsPAPAccount
			,@IsUnappliedPaymentAccount  = @IsUnappliedPaymentAccount
			,@DeferredGLAccountCode      = @DeferredGLAccountCode
			,@GLAccountIsActive          = @GLAccountIsActive
			,@GLAccountRowGUID           = @GLAccountRowGUID
			,@PaymentStatusSCD           = @PaymentStatusSCD
			,@PaymentStatusLabel         = @PaymentStatusLabel
			,@IsPaid                     = @IsPaid
			,@PaymentStatusSequence      = @PaymentStatusSequence
			,@PaymentStatusRowGUID       = @PaymentStatusRowGUID
			,@IsDeleteEnabled            = @IsDeleteEnabled
			,@DepositDate                = @DepositDate

	end try

	begin catch
		set @xState = xact_state()
		
		if @tranCount > 0 and @xState = 1
		begin
			rollback transaction @sprocName																			-- committable wrapping trx exists: rollback to savepoint
		end
		else if @xState <> 0																									-- full rollback
		begin
			rollback
		end
		
		exec @errorNo = sf.pErrorRethrow																			-- process message text and re-throw the error
	end catch

	return(@errorNo)

end
GO
