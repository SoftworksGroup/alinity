SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[pRegistrationScheduleYear#Default]
	 @zContext                                   xml               = null                -- default values provided from client-tier (if any)
	,@SetFKDefaults                              bit               = 0                   -- when 1, mandatory FK's are returned as -1 instead of NULL
as
/*********************************************************************************************************************************
Procedure : dbo.pRegistrationScheduleYear#Default
Notice    : Copyright Â© 2019 Softworks Group Inc.
Summary   : provides a blank row with default values for presentation in the UI for "new" dbo.RegistrationScheduleYear records
-----------------------------------------------------------------------------------------------------------------------------------
Author    : Generated by DB Studio: pSprocGen | Designer: Tim Edlund
Version   : March 2019
-----------------------------------------------------------------------------------------------------------------------------------
Comments
--------
This procedure is used in maintenance of the dbo.RegistrationScheduleYear table. When a new record is to be added from the UI, this procedure
is called to return a blank record with default values. If the client-tier is providing the context for the insert, such as a parent
key value for the new record, it must be passed in the @zContext XML parameter. Multiple values may be passed. The standard format
is: <Parameters MyParameter="1000001"/>.

The @SetFKDefaults parameter can be set to 1 to cause the procedure to return mandatory FK values as -1 rather than NULL. This avoids
the need to create complex types for the procedure on architectures which are not using RIA services.

Note that default values for text, ntext and binary type columns is not supported.  These data types are not permitted as local
variables in the current version of SQL Server and should be replaced by varchar(max) and nvarchar(max) where possible.

Some default values are built-in to the shell of the sproc.  The base table column defaults set in the variable declarations below
were obtained from database default constraints which existed at the time the procedure was generated. The declarations include all
columns of the vRegistrationScheduleYear entity view, however, only some values (as noted above) are eligible for default setting.  The other
parameters are included for setting context for the table-specific or client-specific logic of the procedure (if any). Default values
returning a question mark "?", system date, or 0 are provided for non-base table columns which are mandatory.  This is done to avoid
compilation errors from the Entity Framework, however, the values will not be applied since they are not in the base table row.

Two levels of customization of the procedure shell are supported. Table-specific logic can be added through the tagged section and a
call to an extended procedure supports client-specific customization. Logic implemented within the code tags is part of the base
product and applies to all client configurations. Client-specific customizations must be implemented in the ext.pRegistrationScheduleYear
procedure. The extended procedure is only called where it exists in database. The parameter "@Mode" is set to "default.pre" to
advise ext.pRegistrationScheduleYear of the context of the call. All other parameters are also passed, however, only those parameters eligible
for default setting are passed for "output". All parameters corresponding to entity view columns are returned through a SELECT statement.

In order to simplify working with the XML parameter values, logic in the procedure parses the XML and assigns values to variables where
the variable name matches the column name in the XML (assumes single row).  The variables are then available to the table-specific and
client-specific logic.  The @zContext parameter is also passed, unmodified, to the extended procedure to support situations where values
are passed that are not mapped to column names.


-------------------------------------------------------------------------------------------------------------------------------- */

begin
	set nocount on

	declare
		 @errorNo                                      int = 0								-- 0 no error, <50000 SQL error, else business rule
		,@tranCount                                    int = @@trancount			-- determines whether a wrapping transaction exists
		,@sprocName                                    nvarchar(128) = object_name(@@procid)						-- name of currently executing procedure
		,@xState                                       int										-- error state detected in catch block
		,@ON                                         bit = cast(1 as bit)			-- constant for bit comparisons
		,@OFF                                        bit = cast(0 as bit)			-- constant for bit comparisons
		,@registrationScheduleYearSID                int               = -1		-- specific default required by EF - do not override
		,@registrationScheduleSID                    int               = null	-- no default provided from DB constraint - OK to override
		,@registrationYear                           smallint          = null	-- no default provided from DB constraint - OK to override
		,@yearStartTime                              datetime          = null	-- no default provided from DB constraint - OK to override
		,@yearEndTime                                datetime          = null	-- no default provided from DB constraint - OK to override
		,@renewalVerificationOpenTime                datetime          = null	-- no default provided from DB constraint - OK to override
		,@renewalGeneralOpenTime                     datetime          = null	-- no default provided from DB constraint - OK to override
		,@renewalLateFeeStartTime                    datetime          = null	-- no default provided from DB constraint - OK to override
		,@renewalEndTime                             datetime          = null	-- no default provided from DB constraint - OK to override
		,@reinstatementVerificationOpenTime          datetime          = null	-- no default provided from DB constraint - OK to override
		,@reinstatementGeneralOpenTime               datetime          = null	-- no default provided from DB constraint - OK to override
		,@reinstatementEndTime                       datetime          = null	-- no default provided from DB constraint - OK to override
		,@cECollectionStartTime                      datetime          = null	-- no default provided from DB constraint - OK to override
		,@cECollectionEndTime                        datetime          = null	-- no default provided from DB constraint - OK to override
		,@pAPBlockStartTime                          datetime          = null	-- no default provided from DB constraint - OK to override
		,@pAPBlockEndTime                            datetime          = null	-- no default provided from DB constraint - OK to override
		,@userDefinedColumns                         xml               = null	-- no default provided from DB constraint - OK to override
		,@registrationScheduleYearXID                varchar(150)      = null	-- no default provided from DB constraint - OK to override
		,@legacyKey                                  nvarchar(50)      = null	-- no default provided from DB constraint - OK to override
		,@isDeleted                                  bit               = (0)	-- default provided from DB constraint - OK to override
		,@createUser                                 nvarchar(75)      = suser_sname()									-- default value ignored (value set by UI)
		,@createTime                                 datetimeoffset(7) = sysdatetimeoffset()						-- default value ignored (set to system time)
		,@updateUser                                 nvarchar(75)      = suser_sname()									-- default value ignored (value set by UI)
		,@updateTime                                 datetimeoffset(7) = sysdatetimeoffset()						-- default value ignored (set to system time)
		,@rowGUID                                    uniqueidentifier  = newid()												-- default value ignored (value set by system)
		,@rowStamp                                   timestamp         = null	-- default value ignored (value set by system)
		,@registrationScheduleLabel                  nvarchar(35)      = N'?'	-- not a base table column (default ignored)
		,@registrationScheduleIsDefault              bit               = 0		-- not a base table column (default ignored)
		,@registrationScheduleIsActive               bit               = 0		-- not a base table column (default ignored)
		,@registrationScheduleRowGUID                uniqueidentifier  = newid()												-- not a base table column (default ignored)
		,@isDeleteEnabled                            bit											-- not a base table column (default ignored)
		,@isReselected                               tinyint           = 1		-- specific default required by EF - do not override
		,@isNullApplied                              bit               = 1		-- specific default required by EF - do not override
		,@registrationYearLabel                      varchar(25)							-- not a base table column (default ignored)
		,@renewalVerificationOpenTimeComponent       time(7)									-- not a base table column (default ignored)
		,@renewalGeneralOpenTimeComponent            time(7)									-- not a base table column (default ignored)
		,@reinstatementVerificationOpenTimeComponent time(7)									-- not a base table column (default ignored)
		,@reinstatementGeneralOpenTimeComponent      time(7)									-- not a base table column (default ignored)
		,@yearStartTimeComponent                     time(7)									-- not a base table column (default ignored)
		,@yearEndTimeComponent                       time(7)									-- not a base table column (default ignored)
		,@renewalLateFeeStartTimeComponent           time(7)									-- not a base table column (default ignored)
		,@renewalEndTimeComponent                    time(7)									-- not a base table column (default ignored)
		,@reinstatementEndTimeComponent              time(7)									-- not a base table column (default ignored)
		,@pAPBlockStartTimeComponent                 time(7)									-- not a base table column (default ignored)
		,@pAPBlockEndTimeComponent                   time(7)									-- not a base table column (default ignored)
		,@isEditEnabled                              bit											-- not a base table column (default ignored)

	begin try

		-- use a transaction so that any additional updates implemented through the extended
		-- procedure or through table-specific logic succeed or fail as a logical unit

		if @tranCount = 0																											-- no outer transaction
		begin
			begin transaction
		end
		else																																	-- outer transaction so create save point
		begin
			save transaction @sprocName
		end
		-- set mandatory FK values to -1 where requested
		
		if @SetFKDefaults = @ON
		begin
			set @registrationScheduleSID = -1
		end

		-- assign literal defaults passed through @zContext where
		-- provided otherwise leave database default in place
		
		select
			 @registrationScheduleSID            = isnull(context.node.value('@RegistrationScheduleSID'          ,'int'         ),@registrationScheduleSID)
			,@registrationYear                   = isnull(context.node.value('@RegistrationYear'                 ,'smallint'    ),@registrationYear)
			,@yearStartTime                      = isnull(context.node.value('@YearStartTime'                    ,'datetime'    ),@yearStartTime)
			,@yearEndTime                        = isnull(context.node.value('@YearEndTime'                      ,'datetime'    ),@yearEndTime)
			,@renewalVerificationOpenTime        = isnull(context.node.value('@RenewalVerificationOpenTime'      ,'datetime'    ),@renewalVerificationOpenTime)
			,@renewalGeneralOpenTime             = isnull(context.node.value('@RenewalGeneralOpenTime'           ,'datetime'    ),@renewalGeneralOpenTime)
			,@renewalLateFeeStartTime            = isnull(context.node.value('@RenewalLateFeeStartTime'          ,'datetime'    ),@renewalLateFeeStartTime)
			,@renewalEndTime                     = isnull(context.node.value('@RenewalEndTime'                   ,'datetime'    ),@renewalEndTime)
			,@reinstatementVerificationOpenTime  = isnull(context.node.value('@ReinstatementVerificationOpenTime','datetime'    ),@reinstatementVerificationOpenTime)
			,@reinstatementGeneralOpenTime       = isnull(context.node.value('@ReinstatementGeneralOpenTime'     ,'datetime'    ),@reinstatementGeneralOpenTime)
			,@reinstatementEndTime               = isnull(context.node.value('@ReinstatementEndTime'             ,'datetime'    ),@reinstatementEndTime)
			,@cECollectionStartTime              = isnull(context.node.value('@CECollectionStartTime'            ,'datetime'    ),@cECollectionStartTime)
			,@cECollectionEndTime                = isnull(context.node.value('@CECollectionEndTime'              ,'datetime'    ),@cECollectionEndTime)
			,@pAPBlockStartTime                  = isnull(context.node.value('@PAPBlockStartTime'                ,'datetime'    ),@pAPBlockStartTime)
			,@pAPBlockEndTime                    = isnull(context.node.value('@PAPBlockEndTime'                  ,'datetime'    ),@pAPBlockEndTime)
			,@registrationScheduleYearXID        = isnull(context.node.value('@RegistrationScheduleYearXID'      ,'varchar(150)'),@registrationScheduleYearXID)
			,@legacyKey                          = isnull(context.node.value('@LegacyKey'                        ,'nvarchar(50)'),@legacyKey)
		from
			@zContext.nodes('Parameters') as context(node)
		
		-- set default value on foreign keys where configured
		-- and where no DB or literal value was passed for it
		
		if isnull(@registrationScheduleSID,0) = 0 select @registrationScheduleSID = x.RegistrationScheduleSID from dbo.RegistrationSchedule x where x.IsDefault = @ON

		--! <Overrides>
		-- Tim Edlund | Sep 2017
		-- When a new record is added, copy over values from the previous
		-- record adjusting values by +1 year (times are unchanged)

		if @registrationYear is null
		begin

			if @registrationScheduleSID is null
			begin
				select
					@registrationScheduleSID = x.RegistrationScheduleSID
				from
					dbo.RegistrationSchedule x
				where
					x.IsDefault = @ON;
			end;

			select
				@registrationYear														= rsy.RegistrationYear + 1
			 ,@yearStartTime															= dateadd(year, 1, rsy.YearStartTime)
			 ,@yearEndTime																= dateadd(year, 1, rsy.YearEndTime)
			 ,@renewalVerificationOpenTime								= dateadd(year, 1, rsy.RenewalVerificationOpenTime)
			 ,@renewalGeneralOpenTime											= dateadd(year, 1, rsy.RenewalGeneralOpenTime)
			 ,@renewalLateFeeStartTime										= dateadd(year, 1, rsy.RenewalLateFeeStartTime)
			 ,@renewalEndTime															= dateadd(year, 1, rsy.RenewalEndTime)
			 ,@reinstatementVerificationOpenTime					= dateadd(year, 1, rsy.ReinstatementVerificationOpenTime)
			 ,@reinstatementGeneralOpenTime								= dateadd(year, 1, rsy.ReinstatementGeneralOpenTime)
			 ,@reinstatementEndTime												= dateadd(year, 1, rsy.ReinstatementEndTime)
			 ,@pAPBlockStartTime													= dateadd(year, 1, rsy.PAPBlockStartTime)
			 ,@pAPBlockEndTime														= dateadd(year, 1, rsy.PAPBlockEndTime)
			 ,@renewalVerificationOpenTimeComponent				= rsy.RenewalVerificationOpenTimeComponent
			 ,@renewalGeneralOpenTimeComponent						= rsy.RenewalGeneralOpenTimeComponent
			 ,@reinstatementVerificationOpenTimeComponent = rsy.ReinstatementVerificationOpenTimeComponent
			 ,@reinstatementGeneralOpenTimeComponent			= rsy.ReinstatementGeneralOpenTimeComponent
			 ,@yearStartTimeComponent											= rsy.YearStartTimeComponent
			 ,@yearEndTimeComponent												= rsy.YearEndTimeComponent
			 ,@renewalLateFeeStartTimeComponent						= rsy.RenewalLateFeeStartTimeComponent
			 ,@renewalEndTimeComponent										= rsy.RenewalEndTimeComponent
			 ,@reinstatementEndTimeComponent							= rsy.ReinstatementEndTimeComponent
			from
				dbo.vRegistrationScheduleYear rsy
			where
				rsy.RegistrationYear =
			(
				select
					max(x.RegistrationYear) LatestRegistrationYear
				from
					dbo.RegistrationScheduleYear x
				where
					x.RegistrationScheduleSID = @registrationScheduleSID
			);

		end
		--! </Overrides>
	
		-- call the extended version of the procedure (if it exists) for "default.pre" mode
		
		if exists
		(
			select
				1
			from
				sf.vRoutine r
			where
				r.SchemaName = 'ext'
			and
				r.RoutineName = 'pRegistrationScheduleYear'
		)
		begin
		
			exec @errorNo = ext.pRegistrationScheduleYear
				 @Mode                                       = 'default.pre'
				,@RegistrationScheduleYearSID = @registrationScheduleYearSID
				,@RegistrationScheduleSID = @registrationScheduleSID output
				,@RegistrationYear = @registrationYear output
				,@YearStartTime = @yearStartTime output
				,@YearEndTime = @yearEndTime output
				,@RenewalVerificationOpenTime = @renewalVerificationOpenTime output
				,@RenewalGeneralOpenTime = @renewalGeneralOpenTime output
				,@RenewalLateFeeStartTime = @renewalLateFeeStartTime output
				,@RenewalEndTime = @renewalEndTime output
				,@ReinstatementVerificationOpenTime = @reinstatementVerificationOpenTime output
				,@ReinstatementGeneralOpenTime = @reinstatementGeneralOpenTime output
				,@ReinstatementEndTime = @reinstatementEndTime output
				,@CECollectionStartTime = @cECollectionStartTime output
				,@CECollectionEndTime = @cECollectionEndTime output
				,@PAPBlockStartTime = @pAPBlockStartTime output
				,@PAPBlockEndTime = @pAPBlockEndTime output
				,@UserDefinedColumns = @userDefinedColumns output
				,@RegistrationScheduleYearXID = @registrationScheduleYearXID output
				,@LegacyKey = @legacyKey output
				,@IsDeleted = @isDeleted
				,@CreateUser = @createUser
				,@CreateTime = @createTime
				,@UpdateUser = @updateUser
				,@UpdateTime = @updateTime
				,@RowGUID = @rowGUID
				,@RowStamp = @rowStamp
				,@RegistrationScheduleLabel = @registrationScheduleLabel
				,@RegistrationScheduleIsDefault = @registrationScheduleIsDefault
				,@RegistrationScheduleIsActive = @registrationScheduleIsActive
				,@RegistrationScheduleRowGUID = @registrationScheduleRowGUID
				,@IsDeleteEnabled = @isDeleteEnabled
				,@IsReselected = @isReselected
				,@IsNullApplied = @isNullApplied
				,@zContext = @zContext output
				,@RegistrationYearLabel = @registrationYearLabel
				,@RenewalVerificationOpenTimeComponent = @renewalVerificationOpenTimeComponent
				,@RenewalGeneralOpenTimeComponent = @renewalGeneralOpenTimeComponent
				,@ReinstatementVerificationOpenTimeComponent = @reinstatementVerificationOpenTimeComponent
				,@ReinstatementGeneralOpenTimeComponent = @reinstatementGeneralOpenTimeComponent
				,@YearStartTimeComponent = @yearStartTimeComponent
				,@YearEndTimeComponent = @yearEndTimeComponent
				,@RenewalLateFeeStartTimeComponent = @renewalLateFeeStartTimeComponent
				,@RenewalEndTimeComponent = @renewalEndTimeComponent
				,@ReinstatementEndTimeComponent = @reinstatementEndTimeComponent
				,@PAPBlockStartTimeComponent = @pAPBlockStartTimeComponent
				,@PAPBlockEndTimeComponent = @pAPBlockEndTimeComponent
				,@IsEditEnabled = @isEditEnabled
		
		end

		select
			 @registrationScheduleYearSID RegistrationScheduleYearSID
			,@registrationScheduleSID RegistrationScheduleSID
			,@registrationYear RegistrationYear
			,@yearStartTime YearStartTime
			,@yearEndTime YearEndTime
			,@renewalVerificationOpenTime RenewalVerificationOpenTime
			,@renewalGeneralOpenTime RenewalGeneralOpenTime
			,@renewalLateFeeStartTime RenewalLateFeeStartTime
			,@renewalEndTime RenewalEndTime
			,@reinstatementVerificationOpenTime ReinstatementVerificationOpenTime
			,@reinstatementGeneralOpenTime ReinstatementGeneralOpenTime
			,@reinstatementEndTime ReinstatementEndTime
			,@cECollectionStartTime CECollectionStartTime
			,@cECollectionEndTime CECollectionEndTime
			,@pAPBlockStartTime PAPBlockStartTime
			,@pAPBlockEndTime PAPBlockEndTime
			,@userDefinedColumns UserDefinedColumns
			,@registrationScheduleYearXID RegistrationScheduleYearXID
			,@legacyKey LegacyKey
			,@isDeleted IsDeleted
			,@createUser CreateUser
			,@createTime CreateTime
			,@updateUser UpdateUser
			,@updateTime UpdateTime
			,@rowGUID RowGUID
			,@rowStamp RowStamp
			,@registrationScheduleLabel RegistrationScheduleLabel
			,@registrationScheduleIsDefault RegistrationScheduleIsDefault
			,@registrationScheduleIsActive RegistrationScheduleIsActive
			,@registrationScheduleRowGUID RegistrationScheduleRowGUID
			,@isDeleteEnabled IsDeleteEnabled
			,@isReselected IsReselected
			,@isNullApplied IsNullApplied
			,@zContext zContext
			,@registrationYearLabel RegistrationYearLabel
			,@renewalVerificationOpenTimeComponent RenewalVerificationOpenTimeComponent
			,@renewalGeneralOpenTimeComponent RenewalGeneralOpenTimeComponent
			,@reinstatementVerificationOpenTimeComponent ReinstatementVerificationOpenTimeComponent
			,@reinstatementGeneralOpenTimeComponent ReinstatementGeneralOpenTimeComponent
			,@yearStartTimeComponent YearStartTimeComponent
			,@yearEndTimeComponent YearEndTimeComponent
			,@renewalLateFeeStartTimeComponent RenewalLateFeeStartTimeComponent
			,@renewalEndTimeComponent RenewalEndTimeComponent
			,@reinstatementEndTimeComponent ReinstatementEndTimeComponent
			,@pAPBlockStartTimeComponent PAPBlockStartTimeComponent
			,@pAPBlockEndTimeComponent PAPBlockEndTimeComponent
			,@isEditEnabled IsEditEnabled

	end try

	begin catch
		set @xState = xact_state()
		
		if @tranCount > 0 and @xState = 1
		begin
			rollback transaction @sprocName																			-- committable wrapping trx exists: rollback to savepoint
		end
		else if @xState <> 0																									-- full rollback
		begin
			rollback
		end
		
		exec @errorNo = sf.pErrorRethrow																			-- process message text and re-throw the error
	end catch

	return(@errorNo)

end
GO
