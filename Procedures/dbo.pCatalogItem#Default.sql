SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
CREATE PROCEDURE [dbo].[pCatalogItem#Default]
	 @zContext                  xml               = null                          -- default values provided from client-tier (if any)
	,@SetFKDefaults             bit               = 0                             -- when 1, mandatory FK's are returned as -1 instead of NULL
as
/*********************************************************************************************************************************
Procedure : dbo.pCatalogItem#Default
Notice    : Copyright Â© 2019 Softworks Group Inc.
Summary   : provides a blank row with default values for presentation in the UI for "new" dbo.CatalogItem records
-----------------------------------------------------------------------------------------------------------------------------------
Author    : Generated by DB Studio: pSprocGen | Designer: Tim Edlund
Version   : April 2019
-----------------------------------------------------------------------------------------------------------------------------------
Comments
--------
This procedure is used in maintenance of the dbo.CatalogItem table. When a new record is to be added from the UI, this procedure
is called to return a blank record with default values. If the client-tier is providing the context for the insert, such as a parent
key value for the new record, it must be passed in the @zContext XML parameter. Multiple values may be passed. The standard format
is: <Parameters MyParameter="1000001"/>.

The @SetFKDefaults parameter can be set to 1 to cause the procedure to return mandatory FK values as -1 rather than NULL. This avoids
the need to create complex types for the procedure on architectures which are not using RIA services.

Note that default values for text, ntext and binary type columns is not supported.  These data types are not permitted as local
variables in the current version of SQL Server and should be replaced by varchar(max) and nvarchar(max) where possible.

Some default values are built-in to the shell of the sproc.  The base table column defaults set in the variable declarations below
were obtained from database default constraints which existed at the time the procedure was generated. The declarations include all
columns of the vCatalogItem entity view, however, only some values (as noted above) are eligible for default setting.  The other
parameters are included for setting context for the table-specific or client-specific logic of the procedure (if any). Default values
returning a question mark "?", system date, or 0 are provided for non-base table columns which are mandatory.  This is done to avoid
compilation errors from the Entity Framework, however, the values will not be applied since they are not in the base table row.

Two levels of customization of the procedure shell are supported. Table-specific logic can be added through the tagged section and a
call to an extended procedure supports client-specific customization. Logic implemented within the code tags is part of the base
product and applies to all client configurations. Client-specific customizations must be implemented in the ext.pCatalogItem
procedure. The extended procedure is only called where it exists in database. The parameter "@Mode" is set to "default.pre" to
advise ext.pCatalogItem of the context of the call. All other parameters are also passed, however, only those parameters eligible
for default setting are passed for "output". All parameters corresponding to entity view columns are returned through a SELECT statement.

In order to simplify working with the XML parameter values, logic in the procedure parses the XML and assigns values to variables where
the variable name matches the column name in the XML (assumes single row).  The variables are then available to the table-specific and
client-specific logic.  The @zContext parameter is also passed, unmodified, to the extended procedure to support situations where values
are passed that are not mapped to column names.


-------------------------------------------------------------------------------------------------------------------------------- */

begin
	set nocount on

	declare
		 @errorNo                                      int = 0								-- 0 no error, <50000 SQL error, else business rule
		,@tranCount                                    int = @@trancount			-- determines whether a wrapping transaction exists
		,@sprocName                                    nvarchar(128) = object_name(@@procid)						-- name of currently executing procedure
		,@xState                                       int										-- error state detected in catch block
		,@ON                        bit = cast(1 as bit)											-- constant for bit comparisons
		,@OFF                       bit = cast(0 as bit)											-- constant for bit comparisons
		,@catalogItemSID            int               = -1										-- specific default required by EF - do not override
		,@catalogItemLabel          nvarchar(35)      = null									-- no default provided from DB constraint - OK to override
		,@invoiceItemDescription    nvarchar(500)     = null									-- no default provided from DB constraint - OK to override
		,@isLateFee                 bit               = CONVERT(bit,(0))			-- default provided from DB constraint - OK to override
		,@itemDetailedDescription   varbinary(max)    = null									-- no default provided from DB constraint - OK to override
		,@itemSmallImage            varbinary(max)    = null									-- no default provided from DB constraint - OK to override
		,@itemLargeImage            varbinary(max)    = null									-- no default provided from DB constraint - OK to override
		,@imageAlternateText        nvarchar(50)      = null									-- no default provided from DB constraint - OK to override
		,@isAvailableOnClientPortal bit               = CONVERT(bit,(0))			-- default provided from DB constraint - OK to override
		,@isComplaintPenalty        bit               = CONVERT(bit,(0))			-- default provided from DB constraint - OK to override
		,@gLAccountSID              int               = null									-- no default provided from DB constraint - OK to override
		,@isTaxRate1Applied         bit               = (0)										-- default provided from DB constraint - OK to override
		,@isTaxRate2Applied         bit               = (0)										-- default provided from DB constraint - OK to override
		,@isTaxRate3Applied         bit               = (0)										-- default provided from DB constraint - OK to override
		,@isTaxDeductible           bit               = (1)										-- default provided from DB constraint - OK to override
		,@effectiveTime             datetime          = CONVERT(datetime,sf.fToday())										-- default provided from DB constraint - OK to override
		,@expiryTime                datetime          = null									-- no default provided from DB constraint - OK to override
		,@fileTypeSCD               varchar(8)        = '.HTML'								-- default provided from DB constraint - OK to override
		,@fileTypeSID               int               = null									-- no default provided from DB constraint - OK to override
		,@userDefinedColumns        xml               = null									-- no default provided from DB constraint - OK to override
		,@catalogItemXID            varchar(150)      = null									-- no default provided from DB constraint - OK to override
		,@legacyKey                 nvarchar(50)      = null									-- no default provided from DB constraint - OK to override
		,@isDeleted                 bit               = (0)										-- default provided from DB constraint - OK to override
		,@createUser                nvarchar(75)      = suser_sname()					-- default value ignored (value set by UI)
		,@createTime                datetimeoffset(7) = sysdatetimeoffset()		-- default value ignored (set to system time)
		,@updateUser                nvarchar(75)      = suser_sname()					-- default value ignored (value set by UI)
		,@updateTime                datetimeoffset(7) = sysdatetimeoffset()		-- default value ignored (set to system time)
		,@rowGUID                   uniqueidentifier  = newid()								-- default value ignored (value set by system)
		,@rowStamp                  timestamp         = null									-- default value ignored (value set by system)
		,@gLAccountCode             varchar(50)       = '?'										-- not a base table column (default ignored)
		,@gLAccountLabel            nvarchar(35)      = N'?'									-- not a base table column (default ignored)
		,@isRevenueAccount          bit               = 0											-- not a base table column (default ignored)
		,@isBankAccount             bit               = 0											-- not a base table column (default ignored)
		,@isTaxAccount              bit               = 0											-- not a base table column (default ignored)
		,@isPAPAccount              bit               = 0											-- not a base table column (default ignored)
		,@isUnappliedPaymentAccount bit               = 0											-- not a base table column (default ignored)
		,@deferredGLAccountCode     varchar(50)																-- not a base table column (default ignored)
		,@gLAccountIsActive         bit               = 0											-- not a base table column (default ignored)
		,@gLAccountRowGUID          uniqueidentifier  = newid()								-- not a base table column (default ignored)
		,@fileTypeFileTypeSCD       varchar(8)        = '?'										-- not a base table column (default ignored)
		,@fileTypeLabel             nvarchar(35)      = N'?'									-- not a base table column (default ignored)
		,@mimeType                  varchar(255)      = '?'										-- not a base table column (default ignored)
		,@isInline                  bit               = 0											-- not a base table column (default ignored)
		,@fileTypeIsActive          bit               = 0											-- not a base table column (default ignored)
		,@fileTypeRowGUID           uniqueidentifier  = newid()								-- not a base table column (default ignored)
		,@isActive                  bit																				-- not a base table column (default ignored)
		,@isPending                 bit																				-- not a base table column (default ignored)
		,@isDeleteEnabled           bit																				-- not a base table column (default ignored)
		,@isReselected              tinyint           = 1											-- specific default required by EF - do not override
		,@isNullApplied             bit               = 1											-- specific default required by EF - do not override
		,@currentPrice              decimal(11,2)															-- not a base table column (default ignored)
		,@tax1Label                 nvarchar(8)																-- not a base table column (default ignored)
		,@tax1Rate                  decimal(4,4)															-- not a base table column (default ignored)
		,@tax1GLAccountSID          int																				-- not a base table column (default ignored)
		,@tax1Amount                decimal(11,2)															-- not a base table column (default ignored)
		,@tax2Label                 nvarchar(8)																-- not a base table column (default ignored)
		,@tax2Rate                  decimal(4,4)															-- not a base table column (default ignored)
		,@tax2GLAccountSID          int																				-- not a base table column (default ignored)
		,@tax2Amount                decimal(11,2)															-- not a base table column (default ignored)
		,@tax3Label                 nvarchar(8)																-- not a base table column (default ignored)
		,@tax3Rate                  decimal(4,4)															-- not a base table column (default ignored)
		,@tax3GLAccountSID          int																				-- not a base table column (default ignored)
		,@tax3Amount                decimal(11,2)															-- not a base table column (default ignored)

	begin try

		-- use a transaction so that any additional updates implemented through the extended
		-- procedure or through table-specific logic succeed or fail as a logical unit

		if @tranCount = 0																											-- no outer transaction
		begin
			begin transaction
		end
		else																																	-- outer transaction so create save point
		begin
			save transaction @sprocName
		end
		-- set mandatory FK values to -1 where requested
		
		if @SetFKDefaults = @ON
		begin
			set @gLAccountSID = -1
			set @fileTypeSID = -1
		end

		-- assign literal defaults passed through @zContext where
		-- provided otherwise leave database default in place
		
		select
			 @catalogItemLabel           = isnull(context.node.value('@CatalogItemLabel'         ,'nvarchar(35)'  ),@catalogItemLabel)
			,@invoiceItemDescription     = isnull(context.node.value('@InvoiceItemDescription'   ,'nvarchar(500)' ),@invoiceItemDescription)
			,@isLateFee                  = isnull(context.node.value('@IsLateFee'                ,'bit'           ),@isLateFee)
			,@itemDetailedDescription    = isnull(context.node.value('@ItemDetailedDescription'  ,'varbinary(max)'),@itemDetailedDescription)
			,@itemSmallImage             = isnull(context.node.value('@ItemSmallImage'           ,'varbinary(max)'),@itemSmallImage)
			,@itemLargeImage             = isnull(context.node.value('@ItemLargeImage'           ,'varbinary(max)'),@itemLargeImage)
			,@imageAlternateText         = isnull(context.node.value('@ImageAlternateText'       ,'nvarchar(50)'  ),@imageAlternateText)
			,@isAvailableOnClientPortal  = isnull(context.node.value('@IsAvailableOnClientPortal','bit'           ),@isAvailableOnClientPortal)
			,@isComplaintPenalty         = isnull(context.node.value('@IsComplaintPenalty'       ,'bit'           ),@isComplaintPenalty)
			,@gLAccountSID               = isnull(context.node.value('@GLAccountSID'             ,'int'           ),@gLAccountSID)
			,@isTaxRate1Applied          = isnull(context.node.value('@IsTaxRate1Applied'        ,'bit'           ),@isTaxRate1Applied)
			,@isTaxRate2Applied          = isnull(context.node.value('@IsTaxRate2Applied'        ,'bit'           ),@isTaxRate2Applied)
			,@isTaxRate3Applied          = isnull(context.node.value('@IsTaxRate3Applied'        ,'bit'           ),@isTaxRate3Applied)
			,@isTaxDeductible            = isnull(context.node.value('@IsTaxDeductible'          ,'bit'           ),@isTaxDeductible)
			,@effectiveTime              = isnull(context.node.value('@EffectiveTime'            ,'datetime'      ),@effectiveTime)
			,@expiryTime                 = isnull(context.node.value('@ExpiryTime'               ,'datetime'      ),@expiryTime)
			,@fileTypeSCD                = isnull(context.node.value('@FileTypeSCD'              ,'varchar(8)'    ),@fileTypeSCD)
			,@fileTypeSID                = isnull(context.node.value('@FileTypeSID'              ,'int'           ),@fileTypeSID)
			,@catalogItemXID             = isnull(context.node.value('@CatalogItemXID'           ,'varchar(150)'  ),@catalogItemXID)
			,@legacyKey                  = isnull(context.node.value('@LegacyKey'                ,'nvarchar(50)'  ),@legacyKey)
		from
			@zContext.nodes('Parameters') as context(node)
		

		--! <Overrides>
		--  insert default value logic here ...
		--! </Overrides>
	
		-- call the extended version of the procedure (if it exists) for "default.pre" mode
		
		if exists
		(
			select
				1
			from
				sf.vRoutine r
			where
				r.SchemaName = 'ext'
			and
				r.RoutineName = 'pCatalogItem'
		)
		begin
		
			exec @errorNo = ext.pCatalogItem
				 @Mode                      = 'default.pre'
				,@CatalogItemSID = @catalogItemSID
				,@CatalogItemLabel = @catalogItemLabel output
				,@InvoiceItemDescription = @invoiceItemDescription output
				,@IsLateFee = @isLateFee output
				,@ItemDetailedDescription = @itemDetailedDescription output
				,@ItemSmallImage = @itemSmallImage output
				,@ItemLargeImage = @itemLargeImage output
				,@ImageAlternateText = @imageAlternateText output
				,@IsAvailableOnClientPortal = @isAvailableOnClientPortal output
				,@IsComplaintPenalty = @isComplaintPenalty output
				,@GLAccountSID = @gLAccountSID output
				,@IsTaxRate1Applied = @isTaxRate1Applied output
				,@IsTaxRate2Applied = @isTaxRate2Applied output
				,@IsTaxRate3Applied = @isTaxRate3Applied output
				,@IsTaxDeductible = @isTaxDeductible output
				,@EffectiveTime = @effectiveTime output
				,@ExpiryTime = @expiryTime output
				,@FileTypeSCD = @fileTypeSCD output
				,@FileTypeSID = @fileTypeSID output
				,@UserDefinedColumns = @userDefinedColumns output
				,@CatalogItemXID = @catalogItemXID output
				,@LegacyKey = @legacyKey output
				,@IsDeleted = @isDeleted
				,@CreateUser = @createUser
				,@CreateTime = @createTime
				,@UpdateUser = @updateUser
				,@UpdateTime = @updateTime
				,@RowGUID = @rowGUID
				,@RowStamp = @rowStamp
				,@GLAccountCode = @gLAccountCode
				,@GLAccountLabel = @gLAccountLabel
				,@IsRevenueAccount = @isRevenueAccount
				,@IsBankAccount = @isBankAccount
				,@IsTaxAccount = @isTaxAccount
				,@IsPAPAccount = @isPAPAccount
				,@IsUnappliedPaymentAccount = @isUnappliedPaymentAccount
				,@DeferredGLAccountCode = @deferredGLAccountCode
				,@GLAccountIsActive = @gLAccountIsActive
				,@GLAccountRowGUID = @gLAccountRowGUID
				,@FileTypeFileTypeSCD = @fileTypeFileTypeSCD
				,@FileTypeLabel = @fileTypeLabel
				,@MimeType = @mimeType
				,@IsInline = @isInline
				,@FileTypeIsActive = @fileTypeIsActive
				,@FileTypeRowGUID = @fileTypeRowGUID
				,@IsActive = @isActive
				,@IsPending = @isPending
				,@IsDeleteEnabled = @isDeleteEnabled
				,@IsReselected = @isReselected
				,@IsNullApplied = @isNullApplied
				,@zContext = @zContext output
				,@CurrentPrice = @currentPrice
				,@Tax1Label = @tax1Label
				,@Tax1Rate = @tax1Rate
				,@Tax1GLAccountSID = @tax1GLAccountSID
				,@Tax1Amount = @tax1Amount
				,@Tax2Label = @tax2Label
				,@Tax2Rate = @tax2Rate
				,@Tax2GLAccountSID = @tax2GLAccountSID
				,@Tax2Amount = @tax2Amount
				,@Tax3Label = @tax3Label
				,@Tax3Rate = @tax3Rate
				,@Tax3GLAccountSID = @tax3GLAccountSID
				,@Tax3Amount = @tax3Amount
		
		end

		select
			 @catalogItemSID CatalogItemSID
			,@catalogItemLabel CatalogItemLabel
			,@invoiceItemDescription InvoiceItemDescription
			,@isLateFee IsLateFee
			,@itemDetailedDescription ItemDetailedDescription
			,@itemSmallImage ItemSmallImage
			,@itemLargeImage ItemLargeImage
			,@imageAlternateText ImageAlternateText
			,@isAvailableOnClientPortal IsAvailableOnClientPortal
			,@isComplaintPenalty IsComplaintPenalty
			,@gLAccountSID GLAccountSID
			,@isTaxRate1Applied IsTaxRate1Applied
			,@isTaxRate2Applied IsTaxRate2Applied
			,@isTaxRate3Applied IsTaxRate3Applied
			,@isTaxDeductible IsTaxDeductible
			,@effectiveTime EffectiveTime
			,@expiryTime ExpiryTime
			,@fileTypeSCD FileTypeSCD
			,@fileTypeSID FileTypeSID
			,@userDefinedColumns UserDefinedColumns
			,@catalogItemXID CatalogItemXID
			,@legacyKey LegacyKey
			,@isDeleted IsDeleted
			,@createUser CreateUser
			,@createTime CreateTime
			,@updateUser UpdateUser
			,@updateTime UpdateTime
			,@rowGUID RowGUID
			,@rowStamp RowStamp
			,@gLAccountCode GLAccountCode
			,@gLAccountLabel GLAccountLabel
			,@isRevenueAccount IsRevenueAccount
			,@isBankAccount IsBankAccount
			,@isTaxAccount IsTaxAccount
			,@isPAPAccount IsPAPAccount
			,@isUnappliedPaymentAccount IsUnappliedPaymentAccount
			,@deferredGLAccountCode DeferredGLAccountCode
			,@gLAccountIsActive GLAccountIsActive
			,@gLAccountRowGUID GLAccountRowGUID
			,@fileTypeFileTypeSCD FileTypeFileTypeSCD
			,@fileTypeLabel FileTypeLabel
			,@mimeType MimeType
			,@isInline IsInline
			,@fileTypeIsActive FileTypeIsActive
			,@fileTypeRowGUID FileTypeRowGUID
			,@isActive IsActive
			,@isPending IsPending
			,@isDeleteEnabled IsDeleteEnabled
			,@isReselected IsReselected
			,@isNullApplied IsNullApplied
			,@zContext zContext
			,@currentPrice CurrentPrice
			,@tax1Label Tax1Label
			,@tax1Rate Tax1Rate
			,@tax1GLAccountSID Tax1GLAccountSID
			,@tax1Amount Tax1Amount
			,@tax2Label Tax2Label
			,@tax2Rate Tax2Rate
			,@tax2GLAccountSID Tax2GLAccountSID
			,@tax2Amount Tax2Amount
			,@tax3Label Tax3Label
			,@tax3Rate Tax3Rate
			,@tax3GLAccountSID Tax3GLAccountSID
			,@tax3Amount Tax3Amount

	end try

	begin catch
		set @xState = xact_state()
		
		if @tranCount > 0 and @xState = 1
		begin
			rollback transaction @sprocName																			-- committable wrapping trx exists: rollback to savepoint
		end
		else if @xState <> 0																									-- full rollback
		begin
			rollback
		end
		
		exec @errorNo = sf.pErrorRethrow																			-- process message text and re-throw the error
	end catch

	return(@errorNo)

end
GO
