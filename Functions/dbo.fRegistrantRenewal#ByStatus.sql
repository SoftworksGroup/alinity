SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION dbo.fRegistrantRenewal#ByStatus
(
	@RegistrationScheduleYearSID int	-- the registration year key to include in the analysis (Required)
 ,@FormStatusSID							 int	-- status of renewals to include (or NULL for all)
 ,@UpdateFrom									 date -- date range start of status changes to include (or NULL for all):
 ,@UpdateTo										 date -- date range end of status changes to include (or NULL for all):
 ,@IsOpenOnly									 bit	-- set = 1 to restrict to open-form statuses only (0/NULL for all)
 ,@IsPaidOnly									 bit	-- set = 1 to restrict to invoices where no amount is owing (0/NULL for all)
)
returns table
/*********************************************************************************************************************************
Function: Renewals - By Status
Notice  : Copyright Â© 2018 Softworks Group Inc.
Summary	: Returns reporting/statistical values on renewals for status and/or date range
----------------------------------------------------------------------------------------------------------------------------------
History	: Author							| Month Year	| Change Summary
				: ------------------- + ----------- + -----------------------------------------------------------------------------------
 				: Tim Edlund          | Aug 2018		|	Initial version
Comments	
--------
This function supports quick searches and reporting routines on Renewals.  It returns one row for each renewal selected.
All criteria except the Registration Year are optional.  The main use cases are:

Renewals by Status: Admin enters a date range and a status.  For example "Submitted" - returns registrants who are in a 
submitted status where the Update-Time on the Renewal record is between the criteria dates or, the criteria dates
are NULL.  

Alternatively, the function can be called without any status or date range using the @IsOpenOnly criteria to return renewals
which are in-progress for the given Registration Year.

The @IsPaidOnly criteria is incompatible with all status types that may be selected except APPROVED and should be structured
in calls from a separate quick search that does not include the Status nor IsOpen selection criteria. If a form is paid
it will not be open and always has an APPROVED status.

Limitation
----------
Registration Year must be provided.  Null values in that parameter will result in no records being returned.

If either of the date range values are provided, then BOTH must be provided.  No defaults are generated by the function for
date range values left null.

Example
-------
<TestHarness>
  <Test Name = "RandomSelect" IsDefault ="true" Description="Executes the function for all records in a registration year 
	selected at random.">
    <SQLScript>
      <![CDATA[
declare
	@RegistrationScheduleYearSID int	
 ,@FormStatusSID		int
 ,@UpdateFrom				date
 ,@UpdateTo					date
 ,@IsOpenOnly				bit
 ,@IsPaidOnly				bit;

select top (1)
	@RegistrationScheduleYearSID = rsy.RegistrationScheduleYearSID
from
	dbo.RegistrantRenewal rnw
join
	dbo.RegistrationScheduleYear rsy on rnw.RegistrationYear = rsy.RegistrationYear
order by
	newid();

if @@rowcount = 0 or @RegistrationScheduleYearSID is null
begin
	raiserror('** ERROR ** No Suitable Data Found For Test!', 17, 1);
end;
else
begin

	select
		x.*
	from
		dbo.fRegistrantRenewal#ByStatus(@RegistrationScheduleYearSID, @FormStatusSID, @UpdateFrom, @UpdateTo, @IsOpenOnly, @IsPaidOnly) x;

end;

		]]>
    </SQLScript>
    <Assertions>
      <Assertion Type="NotEmptyResultSet" ResultSet="1"/>
      <Assertion Type="ExecutionTime" Value="00:00:03"/>
    </Assertions>
  </Test>
  <Test Name = "DateRange"  Description="Executes the function for records in a registration year 
	between a date range selected at random.">
    <SQLScript>
      <![CDATA[
declare
	@RegistrationScheduleYearSID int	
 ,@FormStatusSID		int
 ,@UpdateFrom				date
 ,@UpdateTo					date
 ,@IsOpenOnly				bit
 ,@IsPaidOnly				bit;

select top (1)
	 @RegistrationScheduleYearSID = rsy.RegistrationScheduleYearSID
	,@FormStatusSID = cs.FormStatusSID
	,@UpdateFrom = dateadd(day, -1, rnw.UpdateTime)
	,@UpdateTo = rnw.UpdateTime
from
	dbo.RegistrantRenewal rnw
join
	dbo.RegistrationScheduleYear rsy on rnw.RegistrationYear = rsy.RegistrationYear
cross apply
	dbo.fRegistrantRenewal#CurrentStatus(rnw.RegistrantRenewalSID, -1) cs
where
	cs.IsInProgress = 1
order by
	newid();

if @@rowcount = 0 or @RegistrationScheduleYearSID is null
begin
	raiserror('** ERROR ** No Suitable Data Found For Test!', 17, 1);
end;
else
begin

	select
		x.*
	from
		dbo.fRegistrantRenewal#ByStatus(@RegistrationScheduleYearSID, @FormStatusSID, @UpdateFrom, @UpdateTo, @IsOpenOnly, @IsPaidOnly) x;

end;
		]]>
    </SQLScript>
    <Assertions>
      <Assertion Type="NotEmptyResultSet" ResultSet="1"/>
      <Assertion Type="ExecutionTime" Value="00:00:03"/>
    </Assertions>
  </Test>
</TestHarness>

exec sf.pUnitTest#Execute
	 @ObjectName = 'dbo.fRegistrantRenewal#ByStatus'
	,@DefaultTestOnly = 1
------------------------------------------------------------------------------------------------------------------------------- */
as
return
(
	select
		cs.RegistrantRenewalSID
	 ,cs.RegistrationSID
	 ,reg.PracticeRegisterSectionSID
	 ,cs.RegistrationYear
	 ,cs.NextFollowUp
	 ,cs.IsReviewRequired
	 ,cs.InvoiceSID
	 ,cs.IsInProgress
	 ,cs.FormStatusSID
	 ,cs.FormStatusSCD
	 ,cs.FormStatusLabel
	 ,(case cs.FormOwnerSCD
			 when 'NONE' then cs.FormOwnerLabel
			 when 'ADMIN' then cs.FormOwnerLabel
			 else 'Member'
		 end
		)												NextToActGroup
	 ,cs.LastStatusChangeTime UpdateTime
	 ,cs.LastStatusChangeTime UpdateUser
	from
		dbo.RegistrationScheduleYear																				 rsy
	cross apply dbo.fRegistrantRenewal#CurrentStatus(-1, rsy.RegistrationYear) cs -- get status of each record in the year
	join
		dbo.Registration reg on cs.RegistrationSID = reg.RegistrationSID
	where
		rsy.RegistrationScheduleYearSID			= @RegistrationScheduleYearSID -- year is mandatory
		and (cs.FormStatusSID								= @FormStatusSID or @FormStatusSID is null) -- status key is optional
		and
		(
			cs.IsInProgress										= @IsOpenOnly or @IsOpenOnly is null or @IsOpenOnly = cast(0 as bit) -- open only is optional
		)
		and
		(
			isnull(cs.IsPaid, cast(0 as bit)) = @IsPaidOnly or @IsPaidOnly is null or @IsPaidOnly = cast(0 as bit) -- paid only is optional
		)
		and
		(
			(cs.LastStatusChangeTime between sf.fClientDateToDTOffset(@UpdateFrom) and sf.fClientDateToDTOffset(dateadd(day, 1, @UpdateTo)))
			or (@UpdateFrom is null or @UpdateTo is null) -- date range is optional - all records returned if either date is null
		)
);
GO
