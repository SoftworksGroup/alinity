SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
CREATE FUNCTION [dbo].[fRegistrationProfile#Check]
	(
	 @RegistrationProfileSID             int
	,@RegistrationSnapshotSID            int
	,@JursidictionStateProvinceISONumber smallint
	,@RegistrantSID                      int
	,@RegistrantNo                       varchar(50)
	,@GenderSCD                          char(1)
	,@BirthDate                          date
	,@PersonMailingAddressSID            int
	,@ResidenceStateProvinceISONumber    smallint
	,@ResidencePostalCode                varchar(10)
	,@ResidenceCountryISONumber          smallint
	,@ResidenceIsDefaultCountry          bit
	,@RegistrationSID                    int
	,@IsActivePractice                   bit
	,@Education1RegistrantCredentialSID  int
	,@Education1CredentialCode           varchar(15)
	,@Education1GraduationYear           smallint
	,@Education1StateProvinceISONumber   smallint
	,@Education1CountryISONumber         smallint
	,@Education1IsDefaultCountry         bit
	,@Education2RegistrantCredentialSID  int
	,@Education2CredentialCode           varchar(15)
	,@Education2GraduationYear           smallint
	,@Education2StateProvinceISONumber   smallint
	,@Education2CountryISONumber         smallint
	,@Education2IsDefaultCountry         bit
	,@Education3RegistrantCredentialSID  int
	,@Education3CredentialCode           varchar(15)
	,@Education3GraduationYear           smallint
	,@Education3StateProvinceISONumber   smallint
	,@Education3CountryISONumber         smallint
	,@Education3IsDefaultCountry         bit
	,@RegistrantPracticeSID              int
	,@EmploymentStatusCode               varchar(20)
	,@EmploymentCount                    smallint
	,@PracticeHours                      smallint
	,@Employment1RegistrantEmploymentSID int
	,@Employment1TypeCode                varchar(20)
	,@Employment1StateProvinceISONumber  smallint
	,@Employment1CountryISONumber        smallint
	,@Employment1IsDefaultCountry        bit
	,@Employment1PostalCode              varchar(10)
	,@Employment1OrgTypeCode             varchar(20)
	,@Employment1PracticeAreaCode        varchar(20)
	,@Employment1PracticeScopeCode       varchar(20)
	,@Employment1RoleCode                varchar(20)
	,@Employment2RegistrantEmploymentSID int
	,@Employment2TypeCode                varchar(20)
	,@Employment2StateProvinceISONumber  smallint
	,@Employment2IsDefaultCountry        bit
	,@Employment2CountryISONumber        smallint
	,@Employment2PostalCode              varchar(10)
	,@Employment2OrgTypeCode             varchar(20)
	,@Employment2PracticeAreaCode        varchar(20)
	,@Employment2PracticeScopeCode       varchar(20)
	,@Employment2RoleCode                varchar(20)
	,@Employment3RegistrantEmploymentSID int
	,@Employment3TypeCode                varchar(20)
	,@Employment3StateProvinceISONumber  smallint
	,@Employment3CountryISONumber        smallint
	,@Employment3IsDefaultCountry        bit
	,@Employment3PostalCode              varchar(10)
	,@Employment3OrgTypeCode             varchar(20)
	,@Employment3PracticeAreaCode        varchar(20)
	,@Employment3PracticeScopeCode       varchar(20)
	,@Employment3RoleCode                varchar(20)
	,@IsInvalid                          bit
	,@MessageText                        nvarchar(4000)
	,@CheckSumOnLastExport               int
	,@RegistrationProfileXID             varchar(150)
	,@LegacyKey                          nvarchar(50)
	,@IsDeleted                          bit
	,@CreateUser                         nvarchar(75)
	,@CreateTime                         datetimeoffset(7)
	,@UpdateUser                         nvarchar(75)
	,@UpdateTime                         datetimeoffset(7)
	,@RowGUID                            uniqueidentifier
	)
returns bit
as
/*********************************************************************************************************************************
ScalarF : dbo.fRegistrationProfile#Check
Notice  : Copyright Â© 2019 Softworks Group Inc.
Summary : returns 1 (bit) when record values comply with business rules
-----------------------------------------------------------------------------------------------------------------------------------
Author  : Generated by DB Studio: pCheckFcnGen | Designer: Tim Edlund
Version : April 2019
-----------------------------------------------------------------------------------------------------------------------------------
Comments
--------

The function is designed to be incorporated into a check constraint on the table.  The standard for enforcing business rules,
except those that apply only on DELETE, is to use a check constraint.  A single check constraint is implemented on each table.
The constraint checks business rules by calling this function which is passed all the columns of the table. The shell of this
function was generated by an SGI studio procedure.  The function requires customization by a developer to implement validation
logic unique to this table.  Some rules may have been "auto-generated" based on column naming conventions.

The function is designed to be called through a check constraint or through a select statement for batch checking records.  In
both cases all columns of the table (not entity view) must be passed to the function.

In order to support re-generation of functions from DB Studio, the logic for each rule must be implemented with comment based
"XML tagging".  The <BusinessRules> and </BusinessRules> tag pair must enclose the content of all rules and then each individual
rule must be enclosed in a <Rule> ... </Rule> tag pair. The rule name and author information is parsed by the generator inserted
into the business rule index for reference in the documentation header (below).

The function contains "base" rules and "optional rules". A function of the same name in the "ext" schema may contain rules that
apply to this client configuration only. All base rules in the function are enforced on 100% of client configurations while optional
rules can be turned off by setting the "IsEnforced" bit = 0 for the rule in the sf.BusinessRule configuration table through the UI.
Base rules do not check the status of the IsEnforced bit. The enforcement of optional rules must be ON by default. See template.

To Add New Business Rules
-------------------------
o Copy the template (at bottom) to create new rule.
o Include the name of the first column involved in the rule as last segment in @errorMessageSCD
o If rule is optional, call sf.fBusinessRuleIsEnforced with same @errorMessageSCD (include the ".ColumnName")
o Update "Author" value on copied from template to your name - otherwise rule will be overwritten on regeneration!
o Do not change "$AutoRules" syntax - otherwise updates to auto-rules are not generated.
o Remove call to sf.fBusinessRuleIsEnforced from copied template if rule is MANDATORY.
o Prefix MessageSCD with "MBR." if rule is MANDATORY (only).
o Nest IF block to avoid testing rules that do not apply based on preconditions (to improve performance).
o Ensure test of all rules are defined in the test harness project.
o Check performance and resolve as required.

Rule Added By                  MessageCode.Column & Text
------------------------------ ----------------------------------------------------------------------------------------------------
$AutoRules | Tim Edlund        ValueIsRequired.BirthDate A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.CheckSumOnLastExport A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Education1CountryISONumber A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Education1CredentialCode A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Education1GraduationYear A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Education1RegistrantCredentialSID A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Education1StateProvinceISONumber A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Education2CountryISONumber A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Education2CredentialCode A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Education2GraduationYear A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Education2RegistrantCredentialSID A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Education2StateProvinceISONumber A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Education3CountryISONumber A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Education3CredentialCode A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Education3GraduationYear A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Education3RegistrantCredentialSID A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Education3StateProvinceISONumber A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Employment1CountryISONumber A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Employment1OrgTypeCode A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Employment1PostalCode A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Employment1PracticeAreaCode A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Employment1PracticeScopeCode A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Employment1RegistrantEmploymentSID A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Employment1RoleCode A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Employment1StateProvinceISONumber A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Employment1TypeCode A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Employment2CountryISONumber A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Employment2OrgTypeCode A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Employment2PostalCode A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Employment2PracticeAreaCode A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Employment2PracticeScopeCode A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Employment2RegistrantEmploymentSID A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Employment2RoleCode A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Employment2StateProvinceISONumber A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Employment2TypeCode A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Employment3CountryISONumber A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Employment3OrgTypeCode A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Employment3PostalCode A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Employment3PracticeAreaCode A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Employment3PracticeScopeCode A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Employment3RegistrantEmploymentSID A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Employment3RoleCode A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Employment3StateProvinceISONumber A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.Employment3TypeCode A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.EmploymentCount A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.EmploymentStatusCode A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.MessageText A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.PersonMailingAddressSID A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.RegistrantPracticeSID A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.ResidenceCountryISONumber A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.ResidencePostalCode A value for "%1" is required.
$AutoRules | Tim Edlund        ValueIsRequired.ResidenceStateProvinceISONumber A value for "%1" is required.

Example
-------

select
	 RegistrationProfileSID
	,RegistrantNo
	,GenderSCD
	,dbo.fRegistrationProfile#Check
		(
		 RegistrationProfileSID
		,RegistrationSnapshotSID
		,JursidictionStateProvinceISONumber
		,RegistrantSID
		,RegistrantNo
		,GenderSCD
		,BirthDate
		,PersonMailingAddressSID
		,ResidenceStateProvinceISONumber
		,ResidencePostalCode
		,ResidenceCountryISONumber
		,ResidenceIsDefaultCountry
		,RegistrationSID
		,IsActivePractice
		,Education1RegistrantCredentialSID
		,Education1CredentialCode
		,Education1GraduationYear
		,Education1StateProvinceISONumber
		,Education1CountryISONumber
		,Education1IsDefaultCountry
		,Education2RegistrantCredentialSID
		,Education2CredentialCode
		,Education2GraduationYear
		,Education2StateProvinceISONumber
		,Education2CountryISONumber
		,Education2IsDefaultCountry
		,Education3RegistrantCredentialSID
		,Education3CredentialCode
		,Education3GraduationYear
		,Education3StateProvinceISONumber
		,Education3CountryISONumber
		,Education3IsDefaultCountry
		,RegistrantPracticeSID
		,EmploymentStatusCode
		,EmploymentCount
		,PracticeHours
		,Employment1RegistrantEmploymentSID
		,Employment1TypeCode
		,Employment1StateProvinceISONumber
		,Employment1CountryISONumber
		,Employment1IsDefaultCountry
		,Employment1PostalCode
		,Employment1OrgTypeCode
		,Employment1PracticeAreaCode
		,Employment1PracticeScopeCode
		,Employment1RoleCode
		,Employment2RegistrantEmploymentSID
		,Employment2TypeCode
		,Employment2StateProvinceISONumber
		,Employment2IsDefaultCountry
		,Employment2CountryISONumber
		,Employment2PostalCode
		,Employment2OrgTypeCode
		,Employment2PracticeAreaCode
		,Employment2PracticeScopeCode
		,Employment2RoleCode
		,Employment3RegistrantEmploymentSID
		,Employment3TypeCode
		,Employment3StateProvinceISONumber
		,Employment3CountryISONumber
		,Employment3IsDefaultCountry
		,Employment3PostalCode
		,Employment3OrgTypeCode
		,Employment3PracticeAreaCode
		,Employment3PracticeScopeCode
		,Employment3RoleCode
		,IsInvalid
		,MessageText
		,CheckSumOnLastExport
		,UserDefinedColumns
		,RegistrationProfileXID
		,LegacyKey
		,IsDeleted
		,CreateUser
		,CreateTime
		,UpdateUser
		,UpdateTime
		,RowGUID
		)                             IsValid
from
	dbo.RegistrationProfile

-------------------------------------------------------------------------------------------------------------------------------- */

begin

	declare
		 @errorText                       nvarchar(4000)  = N'1'							-- text for errors or returns TRUE when valid
		,@checkFcn                        nvarchar(128)   = object_name(@@procid)												-- name of currently executing function
		,@columnNames                     nvarchar(500)												-- column(s) with error - if multiple separate with commas
		,@errorMessageSCD                 varchar(75)													-- message code to lookup on error
		,@defaultMessageText              nvarchar(1000)											-- message text to return if no override in sf.Message
		,@arg1                            nvarchar(1000)											-- replacement text for "%1" in the message text
		,@arg2                            nvarchar(1000)											-- replacement text for "%2" in the message text
		,@arg3                            nvarchar(1000)											-- replacement text for "%3" in the message text
		,@arg4                            nvarchar(1000)											-- replacement text for "%4" in the message text
		,@arg5                            nvarchar(1000)											-- replacement text for "%5" in the message text
		,@recentAccessHours               smallint														-- configuration value for "recent" insert threshold
		,@isInsert                        bit             = 0									-- 1 if record appears to be an insert (see logic below)
		,@isUpdate                        bit             = 0									-- 1 if not a "new" record
		,@isRecentInsert                  bit             = 0									-- 1 if record was inserted within RECENT hours
		,@ON                              bit             = cast(1 as bit)		-- a constant to reduce repetitive cast syntax in bit comparisons
		,@OFF                             bit             = cast(0 as bit)		-- a constant to reduce repetitive cast syntax in bit comparisons

	-- get configuration value or default to 24 hours

	set @recentAccessHours = isnull(convert(smallint, sf.fConfigParam#Value('RecentAccessHours')), 24)

	if datediff(hour, @CreateTime, sysdatetimeoffset()) > @recentAccessHours-- older than "recent" hours - update only
	begin
		set @isUpdate = @ON
	end
	else if datediff(second, @CreateTime, sysdatetimeoffset()) <= 2					-- record is only 2 seconds old - assume INSERT
	begin
		set @isInsert       = @ON
		set @isRecentInsert = @ON
	end
	else																																		-- record inserted within configured "recent" hours
	begin
		set @isUpdate       = @ON
		set @isRecentInsert = @ON
	end
	
	--!<BusinessRules>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.BirthDate') = @ON and @BirthDate is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.BirthDate'
		set @columnNames        = N'BirthDate'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Birth Date'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.CheckSumOnLastExport') = @ON and @CheckSumOnLastExport is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.CheckSumOnLastExport'
		set @columnNames        = N'CheckSumOnLastExport'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Check Sum On Last Export'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Education1CountryISONumber') = @ON and @Education1CountryISONumber is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Education1CountryISONumber'
		set @columnNames        = N'Education1CountryISONumber'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Education 1Country ISONumber'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Education1CredentialCode') = @ON and @Education1CredentialCode is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Education1CredentialCode'
		set @columnNames        = N'Education1CredentialCode'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Education 1Credential Code'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Education1GraduationYear') = @ON and @Education1GraduationYear is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Education1GraduationYear'
		set @columnNames        = N'Education1GraduationYear'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Education 1Graduation Year'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Education1RegistrantCredentialSID') = @ON and @Education1RegistrantCredentialSID is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Education1RegistrantCredentialSID'
		set @columnNames        = N'Education1RegistrantCredentialSID'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Education 1Registrant Credential'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Education1StateProvinceISONumber') = @ON and @Education1StateProvinceISONumber is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Education1StateProvinceISONumber'
		set @columnNames        = N'Education1StateProvinceISONumber'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Education 1State Province ISONumber'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Education2CountryISONumber') = @ON and @Education2CountryISONumber is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Education2CountryISONumber'
		set @columnNames        = N'Education2CountryISONumber'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Education 2Country ISONumber'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Education2CredentialCode') = @ON and @Education2CredentialCode is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Education2CredentialCode'
		set @columnNames        = N'Education2CredentialCode'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Education 2Credential Code'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Education2GraduationYear') = @ON and @Education2GraduationYear is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Education2GraduationYear'
		set @columnNames        = N'Education2GraduationYear'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Education 2Graduation Year'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Education2RegistrantCredentialSID') = @ON and @Education2RegistrantCredentialSID is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Education2RegistrantCredentialSID'
		set @columnNames        = N'Education2RegistrantCredentialSID'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Education 2Registrant Credential'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Education2StateProvinceISONumber') = @ON and @Education2StateProvinceISONumber is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Education2StateProvinceISONumber'
		set @columnNames        = N'Education2StateProvinceISONumber'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Education 2State Province ISONumber'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Education3CountryISONumber') = @ON and @Education3CountryISONumber is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Education3CountryISONumber'
		set @columnNames        = N'Education3CountryISONumber'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Education 3Country ISONumber'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Education3CredentialCode') = @ON and @Education3CredentialCode is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Education3CredentialCode'
		set @columnNames        = N'Education3CredentialCode'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Education 3Credential Code'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Education3GraduationYear') = @ON and @Education3GraduationYear is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Education3GraduationYear'
		set @columnNames        = N'Education3GraduationYear'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Education 3Graduation Year'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Education3RegistrantCredentialSID') = @ON and @Education3RegistrantCredentialSID is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Education3RegistrantCredentialSID'
		set @columnNames        = N'Education3RegistrantCredentialSID'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Education 3Registrant Credential'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Education3StateProvinceISONumber') = @ON and @Education3StateProvinceISONumber is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Education3StateProvinceISONumber'
		set @columnNames        = N'Education3StateProvinceISONumber'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Education 3State Province ISONumber'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Employment1CountryISONumber') = @ON and @Employment1CountryISONumber is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Employment1CountryISONumber'
		set @columnNames        = N'Employment1CountryISONumber'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Employment 1Country ISONumber'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Employment1OrgTypeCode') = @ON and @Employment1OrgTypeCode is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Employment1OrgTypeCode'
		set @columnNames        = N'Employment1OrgTypeCode'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Employment 1Org Type Code'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Employment1PostalCode') = @ON and @Employment1PostalCode is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Employment1PostalCode'
		set @columnNames        = N'Employment1PostalCode'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Employment 1Postal Code'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Employment1PracticeAreaCode') = @ON and @Employment1PracticeAreaCode is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Employment1PracticeAreaCode'
		set @columnNames        = N'Employment1PracticeAreaCode'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Employment 1Practice Area Code'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Employment1PracticeScopeCode') = @ON and @Employment1PracticeScopeCode is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Employment1PracticeScopeCode'
		set @columnNames        = N'Employment1PracticeScopeCode'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Employment 1Practice Scope Code'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Employment1RegistrantEmploymentSID') = @ON and @Employment1RegistrantEmploymentSID is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Employment1RegistrantEmploymentSID'
		set @columnNames        = N'Employment1RegistrantEmploymentSID'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Employment 1Registrant Employment'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Employment1RoleCode') = @ON and @Employment1RoleCode is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Employment1RoleCode'
		set @columnNames        = N'Employment1RoleCode'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Employment 1Role Code'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Employment1StateProvinceISONumber') = @ON and @Employment1StateProvinceISONumber is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Employment1StateProvinceISONumber'
		set @columnNames        = N'Employment1StateProvinceISONumber'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Employment 1State Province ISONumber'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Employment1TypeCode') = @ON and @Employment1TypeCode is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Employment1TypeCode'
		set @columnNames        = N'Employment1TypeCode'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Employment 1Type Code'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Employment2CountryISONumber') = @ON and @Employment2CountryISONumber is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Employment2CountryISONumber'
		set @columnNames        = N'Employment2CountryISONumber'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Employment 2Country ISONumber'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Employment2OrgTypeCode') = @ON and @Employment2OrgTypeCode is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Employment2OrgTypeCode'
		set @columnNames        = N'Employment2OrgTypeCode'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Employment 2Org Type Code'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Employment2PostalCode') = @ON and @Employment2PostalCode is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Employment2PostalCode'
		set @columnNames        = N'Employment2PostalCode'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Employment 2Postal Code'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Employment2PracticeAreaCode') = @ON and @Employment2PracticeAreaCode is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Employment2PracticeAreaCode'
		set @columnNames        = N'Employment2PracticeAreaCode'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Employment 2Practice Area Code'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Employment2PracticeScopeCode') = @ON and @Employment2PracticeScopeCode is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Employment2PracticeScopeCode'
		set @columnNames        = N'Employment2PracticeScopeCode'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Employment 2Practice Scope Code'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Employment2RegistrantEmploymentSID') = @ON and @Employment2RegistrantEmploymentSID is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Employment2RegistrantEmploymentSID'
		set @columnNames        = N'Employment2RegistrantEmploymentSID'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Employment 2Registrant Employment'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Employment2RoleCode') = @ON and @Employment2RoleCode is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Employment2RoleCode'
		set @columnNames        = N'Employment2RoleCode'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Employment 2Role Code'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Employment2StateProvinceISONumber') = @ON and @Employment2StateProvinceISONumber is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Employment2StateProvinceISONumber'
		set @columnNames        = N'Employment2StateProvinceISONumber'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Employment 2State Province ISONumber'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Employment2TypeCode') = @ON and @Employment2TypeCode is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Employment2TypeCode'
		set @columnNames        = N'Employment2TypeCode'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Employment 2Type Code'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Employment3CountryISONumber') = @ON and @Employment3CountryISONumber is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Employment3CountryISONumber'
		set @columnNames        = N'Employment3CountryISONumber'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Employment 3Country ISONumber'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Employment3OrgTypeCode') = @ON and @Employment3OrgTypeCode is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Employment3OrgTypeCode'
		set @columnNames        = N'Employment3OrgTypeCode'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Employment 3Org Type Code'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Employment3PostalCode') = @ON and @Employment3PostalCode is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Employment3PostalCode'
		set @columnNames        = N'Employment3PostalCode'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Employment 3Postal Code'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Employment3PracticeAreaCode') = @ON and @Employment3PracticeAreaCode is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Employment3PracticeAreaCode'
		set @columnNames        = N'Employment3PracticeAreaCode'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Employment 3Practice Area Code'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Employment3PracticeScopeCode') = @ON and @Employment3PracticeScopeCode is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Employment3PracticeScopeCode'
		set @columnNames        = N'Employment3PracticeScopeCode'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Employment 3Practice Scope Code'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Employment3RegistrantEmploymentSID') = @ON and @Employment3RegistrantEmploymentSID is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Employment3RegistrantEmploymentSID'
		set @columnNames        = N'Employment3RegistrantEmploymentSID'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Employment 3Registrant Employment'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Employment3RoleCode') = @ON and @Employment3RoleCode is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Employment3RoleCode'
		set @columnNames        = N'Employment3RoleCode'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Employment 3Role Code'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Employment3StateProvinceISONumber') = @ON and @Employment3StateProvinceISONumber is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Employment3StateProvinceISONumber'
		set @columnNames        = N'Employment3StateProvinceISONumber'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Employment 3State Province ISONumber'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.Employment3TypeCode') = @ON and @Employment3TypeCode is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.Employment3TypeCode'
		set @columnNames        = N'Employment3TypeCode'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Employment 3Type Code'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.EmploymentCount') = @ON and @EmploymentCount is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.EmploymentCount'
		set @columnNames        = N'EmploymentCount'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Employment Count'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.EmploymentStatusCode') = @ON and @EmploymentStatusCode is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.EmploymentStatusCode'
		set @columnNames        = N'EmploymentStatusCode'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Employment Status Code'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.MessageText') = @ON and @MessageText is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.MessageText'
		set @columnNames        = N'MessageText'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Message Text'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.PersonMailingAddressSID') = @ON and @PersonMailingAddressSID is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.PersonMailingAddressSID'
		set @columnNames        = N'PersonMailingAddressSID'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Person Mailing Address'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.RegistrantPracticeSID') = @ON and @RegistrantPracticeSID is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.RegistrantPracticeSID'
		set @columnNames        = N'RegistrantPracticeSID'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Registrant Practice'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.ResidenceCountryISONumber') = @ON and @ResidenceCountryISONumber is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.ResidenceCountryISONumber'
		set @columnNames        = N'ResidenceCountryISONumber'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Residence Country ISONumber'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.ResidencePostalCode') = @ON and @ResidencePostalCode is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.ResidencePostalCode'
		set @columnNames        = N'ResidencePostalCode'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Residence Postal Code'
	end
	--!</Rule>
	
	--!<Rule Author="$AutoRules | Tim Edlund">
	if @errorMessageSCD is null and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','ValueIsRequired.ResidenceStateProvinceISONumber') = @ON and @ResidenceStateProvinceISONumber is null
	begin
		set @errorMessageSCD    = 'ValueIsRequired.ResidenceStateProvinceISONumber'
		set @columnNames        = N'ResidenceStateProvinceISONumber'
		set @defaultMessageText = N'A value for "%1" is required.'
		set @arg1               = N'Residence State Province ISONumber'
	end
	--!</Rule>
	
	--!<Rule Author="?Template | Apr 2019" Updates="None">
	if @errorMessageSCD is null --and sf.fBusinessRuleIsEnforced(N'dbo',N'RegistrationProfile','?SomeMessageCode.ColumnName') = 1	-- check if rule is ON - REMOVE for mandatory rules
	and 1 = 0
	begin
		set @errorMessageSCD      = '?SomeMessageCode.ColumnName'
		set @columnNames          = N'?ColumnName1, ?ColumnName2'
		set @defaultMessageText   = N'?Some default message text ...'
		set @arg1                 = N'?SomeReplacementValue'
	end
	--!</Rule>
	
	--!</BusinessRules>
	
	-- if no base-product business rules were violated, run the extended version of the
	-- function if it exists
	
	if @errorMessageSCD is null
	begin
	
		if exists
		(
			select
				1
			from
				sf.vRoutine r
			where
				r.SchemaName = 'ext'
			and
				r.RoutineName = 'fRegistrationProfile#Check'
		)
		begin
		
			select @errorText = ext.fRegistrationProfile#Check
				(
				 @RegistrationProfileSID
				,@RegistrationSnapshotSID
				,@JursidictionStateProvinceISONumber
				,@RegistrantSID
				,@RegistrantNo
				,@GenderSCD
				,@BirthDate
				,@PersonMailingAddressSID
				,@ResidenceStateProvinceISONumber
				,@ResidencePostalCode
				,@ResidenceCountryISONumber
				,@ResidenceIsDefaultCountry
				,@RegistrationSID
				,@IsActivePractice
				,@Education1RegistrantCredentialSID
				,@Education1CredentialCode
				,@Education1GraduationYear
				,@Education1StateProvinceISONumber
				,@Education1CountryISONumber
				,@Education1IsDefaultCountry
				,@Education2RegistrantCredentialSID
				,@Education2CredentialCode
				,@Education2GraduationYear
				,@Education2StateProvinceISONumber
				,@Education2CountryISONumber
				,@Education2IsDefaultCountry
				,@Education3RegistrantCredentialSID
				,@Education3CredentialCode
				,@Education3GraduationYear
				,@Education3StateProvinceISONumber
				,@Education3CountryISONumber
				,@Education3IsDefaultCountry
				,@RegistrantPracticeSID
				,@EmploymentStatusCode
				,@EmploymentCount
				,@PracticeHours
				,@Employment1RegistrantEmploymentSID
				,@Employment1TypeCode
				,@Employment1StateProvinceISONumber
				,@Employment1CountryISONumber
				,@Employment1IsDefaultCountry
				,@Employment1PostalCode
				,@Employment1OrgTypeCode
				,@Employment1PracticeAreaCode
				,@Employment1PracticeScopeCode
				,@Employment1RoleCode
				,@Employment2RegistrantEmploymentSID
				,@Employment2TypeCode
				,@Employment2StateProvinceISONumber
				,@Employment2IsDefaultCountry
				,@Employment2CountryISONumber
				,@Employment2PostalCode
				,@Employment2OrgTypeCode
				,@Employment2PracticeAreaCode
				,@Employment2PracticeScopeCode
				,@Employment2RoleCode
				,@Employment3RegistrantEmploymentSID
				,@Employment3TypeCode
				,@Employment3StateProvinceISONumber
				,@Employment3CountryISONumber
				,@Employment3IsDefaultCountry
				,@Employment3PostalCode
				,@Employment3OrgTypeCode
				,@Employment3PracticeAreaCode
				,@Employment3PracticeScopeCode
				,@Employment3RoleCode
				,@IsInvalid
				,@MessageText
				,@CheckSumOnLastExport
				,@RegistrationProfileXID
				,@LegacyKey
				,@IsDeleted
				,@CreateUser
				,@CreateTime
				,@UpdateUser
				,@UpdateTime
				,@RowGUID
				)
		
		end
	
	end
	
	-- if the extended function returned error text it will already be formatted otherwise check
	-- for a message code value and format the error information for processing by sf.pErrorRethrow
	
	if @errorText not like N'<err>%' and @errorMessageSCD is not null
	begin
	
		set @errorText = sf.fCheckConstraintErrorString
			(
			 @errorMessageSCD
			,@defaultMessageText
			,@columnNames
			,@RegistrationProfileSID
			,@arg1
			,@arg2
			,@arg3
			,@arg4
			,@arg5
			)
	
	end
	
	-- cast returns TRUE if no errors (@errorText=1) but throws an exception for processing by sf.pErrorRethrow otherwise
	
	return cast(@errorText as bit)
end
GO
