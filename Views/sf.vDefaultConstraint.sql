SET ANSI_NULLS ON
SET QUOTED_IDENTIFIER ON
GO
CREATE VIEW [sf].[vDefaultConstraint]
as
/*********************************************************************************************************************************
View    : Default Constraint
Notice  : Copyright Â© 2014 Softworks Group Inc.
Summary	: returns information about column defaults - including syntax for dropping and reinstating them
----------------------------------------------------------------------------------------------------------------------------------
History	: Author(s)  	| Month Year		| Change Summary
				: ------------|---------------|-------------------------------------------------------------------------------------------
				: Tim Edlund  | April 2010    |	Initial Version		
				: Adam Panter	| May 2014			| Added test harness
----------------------------------------------------------------------------------------------------------------------------------
Comments	
--------
This is a utility view that returns information about default settings on columns.  The view is used during development to provide 
the syntax for dropping and recreating constraints where the constraint syntax contains a function that requires maintenance. Since 
any function used in a default is schema bound, it cannot be altered unless references to it in defaults are dropped first.  This 
view returns 2 columns for this purpose:  one to drop the default constraint and another to add the constraint back - preserving 
the syntax.  Before maintenance is performed, the syntax provided by these columns should be copied to the maintenance script - 
or run separately. 

If you are using a source controlled database project in Visual Studio, you can simply modify the source in the project on the schema 
bound function, and then use the drop syntax generated by this view to drop the constraints prior to deployment.  If the constraints 
are not dropped first, the deployment will fail.

Testing
-------
Two unit tests are included. The first selects a random set of 50 constraints and ensures that the result set is not empty, and 
completes in less than five seconds. The second test selects a single random row, and ensures that exactly one row is returned, 
in less than one second. SQLDropCommand and SQLAddCommand must not be null.

--!<TestHarness>
--<Test Name = "RandomSelect" Description="Select a list of default constraints in the dbo schema from the vDefaultConstraint table. Ensures that the result set in not empty, and that this runs in less than 5 seconds.">
--<SQLScript>
--<![CDATA[
			select top 50
				 dc.ConstraintName
				,dc.SQLDropCommand
				,dc.SQLAddCommand
				,dc.OrdinalPosition
				,dc.DefaultClause
			from
				sf.vDefaultConstraint dc
			where
				dc.ConstraintSchema = 'dbo'
--]]>
--</SQLScript>
--<Assertions>
--  <Assertion Type="NotEmptyResultSet" RowSet="1" ResultSet="1"/>'
--  <Assertion Type="ExecutionTime" Value="00:00:05" />
--</Assertions>
--</Test>

--<Test Name = "DetailSelect" Description="Select all default constraints from the vDefaultConstraint view belonging to a randomly selected table. Assertions include getting a non-empty record set back, and a response time of less than 1 second.">
--<SQLScript>
--<![CDATA[
		select
			 dc.ConstraintName
			,dc.SQLDropCommand
			,dc.SQLAddCommand
			,dc.OrdinalPosition
			,dc.DefaultClause
		from
			sf.vDefaultConstraint dc
		where 
			dc.TableName 
		in
			(
				select top (1)
					name
				from 
					sys.Tables
				order by
					newid()
			)
		and
			SQLDropCommand is not null
		and
			SQLAddCommand is not null
--]]>
--</SQLScript>
--<Assertions>
--  <Assertion Type="NotEmptyResultSet" RowSet="1" ResultSet="1"/>'
--  <Assertion Type="ExecutionTime" Value="00:00:01" />
--</Assertions>
--</Test>
--!</TestHarness>

exec sf.pUnitTest#Execute
	@ObjectName = 'sf.vDefaultConstraint'

------------------------------------------------------------------------------------------------------------------------------- */
select
		schema_name(cnstr.uid) 																																				ConstraintSchema
	 ,cnstr.name 																																										ConstraintName
	 ,tbl.name 																																											TableName
	 ,col.name 																																											ColumnName
	 ,col.colid 																																										OrdinalPosition
	 ,com.text 																																											DefaultClause
	 ,'alter table ' + schema_name(cnstr.uid) + '.' + tbl.name + ' drop constraint ' + cnstr.name 	SQLDropCommand

	 ,'alter table ' + schema_name(cnstr.uid) + '.' + tbl.name + ' add constraint ' 
		+ 'df_' + tbl.name + '_' + col.name + ' default ' + com.text + ' for ' + col.name 						SQLAddCommand

from
		sysobjects 			cnstr
join 
		syscomments 		com 	on cnstr.id = com.id
join 
		sysobjects 			tbl 	on cnstr.parent_obj = tbl.id
join 
		sysconstraints 	con 	on cnstr.id = con.constid
join 
		syscolumns 			col   on tbl.id = col.id and con.colid = col.colid
where
		cnstr.xtype = 'D' 
	and 
		tbl.name not like '[_]%' 
	and 
		tbl.name <> 'sysdiagrams'
GO
